{
  "openapi": "3.0.0",
  "info": {
    "version": "2006-03-01",
    "x-release": "s3",
    "title": "Amazon Simple Storage Service",
    "description": "<p/>",
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png",
      "backgroundColor": "#FFFFFF"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "x-providerName": "amazonaws.com",
    "x-serviceName": "s3",
    "x-origin": [
      {
        "contentType": "application/json",
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/s3-2006-03-01.normal.json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "x-apisguru-driver": "external"
      }
    ],
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-preferred": true
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/s3/"
  },
  "servers": [
    {
      "url": "https://s3.{region}.cloud.sap",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "eu-de-1",
            "eu-de-2"
          ],
          "default": "eu-de-1"
        }
      },
      "description": "The Amazon S3 multi-region endpoint"
    },
    {
      "url": "https://objectstore-3.{region}.cloud.sap",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "eu-de-1",
            "eu-de-2"
          ],
          "default": "eu-de-1"
        }
      },
      "description": "The Amazon S3 multi-region endpoint"
    },
    {
      "url": "http://s3waf.oidctest.c.eu-de-2.cloud.sap",
      "description": "S3 with WAF testing endpoint"
    }
  ],
  "paths": {
    "/{Bucket}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ],
      "head": {
        "operationId": "HeadBucket",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketHEAD.html"
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "NoSuchBucket"
        }
      },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "operationId": "ListObjects",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGET.html"
        },
        "responses": {
          "200": {
            "description": "Success" 
          },
          "480": {
            "description": "NoSuchBucket"
            }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delimiter",
            "in": "query",
            "required": false,
            "description": "A delimiter is a character you use to group keys.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            }
          },
          {
            "name": "encoding-type",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "url"
              ],
              "description": ""
            }
          },
          {
            "name": "versions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            }
          },
          {
            "name": "marker",
            "in": "query",
            "required": false,
            "description": "Marker is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. Marker can be any key in the bucket.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max-keys",
            "in": "query",
            "required": false,
            "description": "Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more. ",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "description": "Limits the response to keys that begin with the specified prefix.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxKeys",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "Marker",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "uploads",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            }
          },
          {
            "name": "object-lock",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            }
          }
          
        ]
      },
      "post": {
        "operationId": "DeleteObjects",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/multiobjectdeleteapi.html"
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-bypass-governance-retention",
            "in": "header",
            "required": false,
            "description": "Specifies whether you want to delete this object even if it has a Governance-type Object Lock in place. To use this header, you must have the <code>s3:BypassGovernanceRetention</code> permission.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-amz-sdk-checksum-algorithm",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "CRC32",
                "CRC32C",
                "SHA1",
                "SHA256"
              ]
            }
          },
          {
            "name": "delete",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            },
            "allowEmptyValue": true
          }
        ]
      }
    },
    "/{Bucket}/": {
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ],
      "head": {
        "operationId": "HeadBucket",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketHEAD.html"
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "NoSuchBucket"
        }
      },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "operationId": "ListObjects2",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGET.html"
        },
        "responses": {
          "200": {
            "description": "Success" 
          },
          "480": {
            "description": "NoSuchBucket"
            }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delimiter",
            "in": "query",
            "required": false,
            "description": "A delimiter is a character you use to group keys.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            }
          },
          {
            "name": "encoding-type",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "url"
              ],
              "description": ""
            }
          },
          {
            "name": "versions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            }
          },
          {
            "name": "marker",
            "in": "query",
            "required": false,
            "description": "Marker is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. Marker can be any key in the bucket.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max-keys",
            "in": "query",
            "required": false,
            "description": "Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more. ",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "description": "Limits the response to keys that begin with the specified prefix.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxKeys",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "Marker",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "uploads",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            }
          },
          {
            "name": "object-lock",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            }
          }
          
        ]
      },
      "post": {
        "operationId": "DeleteObjects",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/multiobjectdeleteapi.html"
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-bypass-governance-retention",
            "in": "header",
            "required": false,
            "description": "Specifies whether you want to delete this object even if it has a Governance-type Object Lock in place. To use this header, you must have the <code>s3:BypassGovernanceRetention</code> permission.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-amz-sdk-checksum-algorithm",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "CRC32",
                "CRC32C",
                "SHA1",
                "SHA256"
              ]
            }
          },
          {
            "name": "delete",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            },
            "allowEmptyValue": true
          }
        ]
      }
    },
    "/{Bucket}/{Key}": {
      "delete": {
        "operationId": "DeleteObject",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectDELETE.html"
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "Key name of the object to delete.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "versionId",
            "in": "query",
            "required": false,
            "description": "VersionId used to reference a specific version of the object.",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ],
      "get": {
        "operationId": "GetObject",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGET.html"
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "NoSuchKey"
          },
          "481": {
            "description": "InvalidObjectState"
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "description": "Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "description": "Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "description": "Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "required": false,
            "description": "Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "Key of the object to get.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "Range",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response-cache-control",
            "in": "query",
            "required": false,
            "description": "Sets the <code>Cache-Control</code> header of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response-content-disposition",
            "in": "query",
            "required": false,
            "description": "Sets the <code>Content-Disposition</code> header of the response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response-content-encoding",
            "in": "query",
            "required": false,
            "description": "Sets the <code>Content-Encoding</code> header of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response-content-language",
            "in": "query",
            "required": false,
            "description": "Sets the <code>Content-Language</code> header of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response-content-type",
            "in": "query",
            "required": false,
            "description": "Sets the <code>Content-Type</code> header of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response-expires",
            "in": "query",
            "required": false,
            "description": "Sets the <code>Expires</code> header of the response.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "versionId",
            "in": "query",
            "required": false,
            "description": "VersionId used to reference a specific version of the object.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partNumber",
            "in": "query",
            "required": false,
            "description": "Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' GET request for the part specified. Useful for downloading just a part of an object.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "x-amz-checksum-mode",
            "in": "header",
            "required": false,
            "description": "To retrieve the checksum, this mode must be enabled.",
            "schema": {
              "type": "string",
              "enum": [
                "ENABLED"
              ]
            }
          }
        ]
      },
      "head": {
        "operationId": "HeadObject",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectHEAD.html"
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "NoSuchKey"
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "description": "Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "description": "Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "description": "Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "required": false,
            "description": "Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "The object key.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "Range",
            "in": "header",
            "required": false,
            "description": "Because <code>HeadObject</code> returns only the metadata for an object, this parameter has no effect.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "query",
            "required": false,
            "description": "VersionId used to reference a specific version of the object.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partNumber",
            "in": "query",
            "required": false,
            "description": "Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' HEAD request for the part specified. Useful querying about the size of the part and the number of parts in this object.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "x-amz-checksum-mode",
            "in": "header",
            "required": false,
            "description": "<p>To retrieve the checksum, this parameter must be enabled.</p> <p>In addition, if you enable <code>ChecksumMode</code> and the object is encrypted with Amazon Web Services Key Management Service (Amazon Web Services KMS), you must have permission to use the <code>kms:Decrypt</code> action for the request to succeed.</p>",
            "schema": {
              "type": "string",
              "enum": [
                "ENABLED"
              ]
            }
          }
        ]
      },
      "put": {
        "operationId": "PutObject",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUT.html"
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
         {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Cache-Control",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Disposition",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Encoding",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Language",
            "in": "header",
            "required": false,
            "description": "The language the content is in.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Length",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Content-MD5",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-sdk-checksum-algorithm",
            "in": "header",
            "required": false,
            "description": "<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>",
            "schema": {
              "type": "string",
              "enum": [
                "CRC32",
                "CRC32C",
                "SHA1",
                "SHA256"
              ]
            }
          },
          {
            "name": "x-amz-checksum-crc32",
            "in": "header",
            "required": false,
            "description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-crc32c",
            "in": "header",
            "required": false,
            "description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-sha1",
            "in": "header",
            "required": false,
            "description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-sha256",
            "in": "header",
            "required": false,
            "description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expires",
            "in": "header",
            "required": false,
            "description": "The date and time at which the object is no longer cacheable. For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21</a>.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "Object key for which the PUT action was initiated.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "x-amz-storage-class",
            "in": "header",
            "required": false,
            "description": "By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html\">Storage Classes</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string",
              "enum": [
                "STANDARD"
              ]
            }
          },
          {
            "name": "x-amz-object-lock-mode",
            "in": "header",
            "required": false,
            "description": "The Object Lock mode that you want to apply to this object.",
            "schema": {
              "type": "string",
              "enum": [
                "GOVERNANCE",
                "COMPLIANCE"
              ]
            }
          },
          {
            "name": "x-amz-object-lock-retain-until-date",
            "in": "header",
            "required": false,
            "description": "The date and time when you want this object's Object Lock to expire. Must be formatted as a timestamp parameter.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "x-amz-object-lock-legal-hold",
            "in": "header",
            "required": false,
            "description": "Specifies whether a legal hold will be applied to this object. For more information about S3 Object Lock, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html\">Object Lock</a>.",
            "schema": {
              "type": "string",
              "enum": [
                "ON",
                "OFF"
              ]
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/": {
      "get": {
        "operationId": "ListBuckets",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTServiceGET.html"
        },
        "responses": {
          "200": {
            "description": "Success"
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ]
    }
  }
},
  "components": {
    "parameters": {
      "x-amz-security-token": {
        "name": "x-amz-security-token",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "hmac": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Amazon S3 signature",
        "x-amazon-apigateway-authtype": "awsS3"
      }
    }
  },
  "security": [
    {
      "hmac": []
    }
  ]
}
