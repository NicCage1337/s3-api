{
  "openapi": "3.0.0",
  "info": {
    "version": "2006-03-01",
    "x-release": "s3",
    "title": "Amazon Simple Storage Service",
    "description": "<p/>",
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png",
      "backgroundColor": "#FFFFFF"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "x-providerName": "amazonaws.com",
    "x-serviceName": "s3",
    "x-origin": [
      {
        "contentType": "application/json",
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/s3-2006-03-01.normal.json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "x-apisguru-driver": "external"
      }
    ],
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-preferred": true
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/s3/"
  },
  "servers": [
    {
      "url": "http://s3{dash-or-dot}{region}.amazonaws.com",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "eu-west-1",
            "ap-northeast-1",
            "ap-southeast-1",
            "ap-southeast-2",
            "sa-east-1"
          ],
          "default": "us-east-1"
        },
        "dash-or-dot": {
          "description": "The service/region URL separator",
          "enum": [
            ".",
            "-"
          ],
          "default": "."
        }
      },
      "description": "The Amazon S3 multi-region endpoint"
    },
    {
      "url": "https://s3{dash-or-dot}{region}.amazonaws.com",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "eu-west-1",
            "ap-northeast-1",
            "ap-southeast-1",
            "ap-southeast-2",
            "sa-east-1"
          ],
          "default": "us-east-1"
        },
        "dash-or-dot": {
          "description": "The service/region URL separator",
          "enum": [
            ".",
            "-"
          ],
          "default": "."
        }
      },
      "description": "The Amazon S3 multi-region endpoint"
    },
    {
      "url": "http://s3.amazonaws.com",
      "variables": {},
      "description": "The general Amazon S3 endpoint for US East (N. Virginia)"
    },
    {
      "url": "https://s3.amazonaws.com",
      "variables": {},
      "description": "The general Amazon S3 endpoint for US East (N. Virginia)"
    },
    {
      "url": "http://s3.{region}.amazonaws.com",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "us-east-2",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "eu-south-1",
            "af-south-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-east-1",
            "ap-south-1",
            "me-south-1"
          ],
          "default": "us-east-2"
        }
      },
      "description": "The Amazon S3 multi-region endpoint"
    },
    {
      "url": "https://s3.{region}.amazonaws.com",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "us-east-2",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "eu-south-1",
            "af-south-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-east-1",
            "ap-south-1",
            "me-south-1"
          ],
          "default": "us-east-2"
        }
      },
      "description": "The Amazon S3 multi-region endpoint"
    },
    {
      "url": "http://s3.{region}.amazonaws.com.cn",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "cn-north-1",
            "cn-northwest-1"
          ],
          "default": "cn-north-1"
        }
      },
      "description": "The Amazon S3 endpoint for China (Beijing) and China (Ningxia)"
    },
    {
      "url": "https://s3.{region}.amazonaws.com.cn",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "cn-north-1",
            "cn-northwest-1"
          ],
          "default": "cn-north-1"
        }
      },
      "description": "The Amazon S3 endpoint for China (Beijing) and China (Ningxia)"
    }
  ],
  "x-hasEquivalentPaths": true,
  "paths": {
    "/{Bucket}/{Key}#uploadId": {
      "delete": {
        "operationId": "AbortMultipartUpload",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadAbort.html"
        },
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AbortMultipartUploadOutput"
                }
              }
            }
          },
          "480": {
            "description": "NoSuchUpload",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchUpload"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "Key of the object for which the multipart upload was initiated.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "uploadId",
            "in": "query",
            "required": true,
            "description": "Upload ID that identifies the multipart upload.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ],
      "post": {
        "operationId": "CompleteMultipartUpload",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadComplete.html"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompleteMultipartUploadOutput"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "Object key for which the multipart upload was initiated.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "uploadId",
            "in": "query",
            "required": true,
            "description": "ID for the initiated multipart upload.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-crc32",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-crc32c",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-sha1",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-sha256",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "text/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "CompleteMultipartUpload": {
                    "description": "The container for the completed multipart upload details.",
                    "type": "object",
                    "properties": {
                      "Parts": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/CompletedPartList"
                          },
                          {
                            "xml": {
                              "name": "Part"
                            },
                            "description": "<p>Array of CompletedPart data types.</p> <p>If you do not supply a valid <code>Part</code> with your request, the service sends back an HTTP 400 response.</p>"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "ListParts",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListParts.html"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListPartsOutput"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "Object key for which the multipart upload was initiated.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "max-parts",
            "in": "query",
            "required": false,
            "description": "Sets the maximum number of parts to return.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "part-number-marker",
            "in": "query",
            "required": false,
            "description": "Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "uploadId",
            "in": "query",
            "required": true,
            "description": "Upload ID identifying the multipart upload whose parts are being listed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxParts",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "PartNumberMarker",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ]
      }
    },
    "/{Bucket}/{Key}#x-amz-copy-source": {
      "put": {
        "operationId": "CopyObject",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectCOPY.html"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CopyObjectOutput"
                }
              }
            }
          },
          "480": {
            "description": "ObjectNotInActiveTierError",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotInActiveTierError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "<p>The name of the destination bucket.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Cache-Control",
            "in": "header",
            "required": false,
            "description": "Specifies caching behavior along the request/reply chain.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-algorithm",
            "in": "header",
            "required": false,
            "description": "Indicates the algorithm you want Amazon S3 to use to create the checksum for the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string",
              "enum": [
                "CRC32",
                "CRC32C",
                "SHA1",
                "SHA256"
              ]
            }
          },
          {
            "name": "Content-Disposition",
            "in": "header",
            "required": false,
            "description": "Specifies presentational information for the object.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Encoding",
            "in": "header",
            "required": false,
            "description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Language",
            "in": "header",
            "required": false,
            "description": "The language the content is in.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "description": "A standard MIME type describing the format of the object data.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-copy-source",
            "in": "header",
            "required": true,
            "description": "<p>Specifies the source object for the copy operation. You specify the value in one of two formats, depending on whether you want to access the source object through an <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html\">access point</a>:</p> <ul> <li> <p>For objects not accessed through an access point, specify the name of the source bucket and the key of the source object, separated by a slash (/). For example, to copy the object <code>reports/january.pdf</code> from the bucket <code>awsexamplebucket</code>, use <code>awsexamplebucket/reports/january.pdf</code>. The value must be URL-encoded.</p> </li> <li> <p>For objects accessed through access points, specify the Amazon Resource Name (ARN) of the object as accessed through the access point, in the format <code>arn:aws:s3:&lt;Region&gt;:&lt;account-id&gt;:accesspoint/&lt;access-point-name&gt;/object/&lt;key&gt;</code>. For example, to copy the object <code>reports/january.pdf</code> through access point <code>my-access-point</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point/object/reports/january.pdf</code>. The value must be URL encoded.</p> <note> <p>Amazon S3 supports copy operations using access points only when the source and destination buckets are in the same Amazon Web Services Region.</p> </note> <p>Alternatively, for objects accessed through Amazon S3 on Outposts, specify the ARN of the object as accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/object/&lt;key&gt;</code>. For example, to copy the object <code>reports/january.pdf</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/object/reports/january.pdf</code>. The value must be URL-encoded. </p> </li> </ul> <p>To copy a specific version of an object, append <code>?versionId=&lt;version-id&gt;</code> to the value (for example, <code>awsexamplebucket/reports/january.pdf?versionId=QUpfdndhfd8438MNFDN93jdnJFkdmqnh893</code>). If you don't specify a version ID, Amazon S3 copies the latest version of the source object.</p>",
            "schema": {
              "type": "string",
              "pattern": "\\/.+\\/.+"
            }
          },
          {
            "name": "x-amz-copy-source-if-match",
            "in": "header",
            "required": false,
            "description": "Copies the object if its entity tag (ETag) matches the specified tag.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-copy-source-if-modified-since",
            "in": "header",
            "required": false,
            "description": "Copies the object if it has been modified since the specified time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "x-amz-copy-source-if-none-match",
            "in": "header",
            "required": false,
            "description": "Copies the object if its entity tag (ETag) is different than the specified ETag.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-copy-source-if-unmodified-since",
            "in": "header",
            "required": false,
            "description": "Copies the object if it hasn't been modified since the specified time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Expires",
            "in": "header",
            "required": false,
            "description": "The date and time at which the object is no longer cacheable.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "The key of the destination object.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "x-amz-metadata-directive",
            "in": "header",
            "required": false,
            "description": "Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.",
            "schema": {
              "type": "string",
              "enum": [
                "COPY",
                "REPLACE"
              ]
            }
          },
          {
            "name": "x-amz-storage-class",
            "in": "header",
            "required": false,
            "description": "By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html\">Storage Classes</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string",
              "enum": [
                "STANDARD",
                "REDUCED_REDUNDANCY",
                "STANDARD_IA",
                "ONEZONE_IA",
                "INTELLIGENT_TIERING",
                "GLACIER",
                "DEEP_ARCHIVE",
                "OUTPOSTS",
                "GLACIER_IR",
                "SNOW"
              ]
            }
          },
          {
            "name": "x-amz-object-lock-mode",
            "in": "header",
            "required": false,
            "description": "The Object Lock mode that you want to apply to the copied object.",
            "schema": {
              "type": "string",
              "enum": [
                "GOVERNANCE",
                "COMPLIANCE"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "text/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "x-amz-meta-": {
                    "description": "A map of metadata to store with the object in S3.",
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/MetadataValue"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ]
    },
    "/{Bucket}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ],
      "head": {
        "operationId": "HeadBucket",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketHEAD.html"
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "NoSuchBucket",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchBucket"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "operationId": "ListObjects",
        "description": "",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGET.html"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListObjectsOutput"
                }
              }
            }
          },
          "480": {
            "description": "NoSuchBucket",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchBucket"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delimiter",
            "in": "query",
            "required": false,
            "description": "A delimiter is a character you use to group keys.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encoding-type",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "url"
              ],
              "description": ""
            }
          },
          {
            "name": "marker",
            "in": "query",
            "required": false,
            "description": "Marker is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. Marker can be any key in the bucket.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max-keys",
            "in": "query",
            "required": false,
            "description": "Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more. ",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "description": "Limits the response to keys that begin with the specified prefix.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxKeys",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "Marker",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ]
      }
    },
    "/{Bucket}/{Key}#uploads": {
      "post": {
        "operationId": "CreateMultipartUpload",
        "description": "<p>This action initiates a multipart upload and returns an upload ID. This upload ID is used to associate all of the parts in the specific multipart upload. You specify this upload ID in each of your subsequent upload part requests (see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a>). You also include this upload ID in the final request to either complete or abort the multipart upload request.</p> <p>For more information about multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html\">Multipart Upload Overview</a>.</p> <p>If you have configured a lifecycle rule to abort incomplete multipart uploads, the upload must complete within the number of days specified in the bucket lifecycle configuration. Otherwise, the incomplete multipart upload becomes eligible for an abort action and Amazon S3 aborts the multipart upload. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config\">Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a>.</p> <p>For information about the permissions required to use the multipart upload API, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\">Multipart Upload and Permissions</a>.</p> <p>For request signing, multipart upload is just a series of regular requests. You initiate a multipart upload, send one or more requests to upload parts, and then complete the multipart upload process. You sign each request individually. There is nothing special about signing multipart upload requests. For more information about signing, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html\">Authenticating Requests (Amazon Web Services Signature Version 4)</a>.</p> <note> <p> After you initiate a multipart upload and upload one or more parts, to stop being charged for storing the uploaded parts, you must either complete or abort the multipart upload. Amazon S3 frees up the space used to store the parts and stop charging you for storing them only after you either complete or abort a multipart upload. </p> </note> <p>You can optionally request server-side encryption. For server-side encryption, Amazon S3 encrypts your data as it writes it to disks in its data centers and decrypts it when you access it. You can provide your own encryption key, or use Amazon Web Services KMS keys or Amazon S3-managed encryption keys. If you choose to provide your own encryption key, the request headers you provide in <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html\">UploadPartCopy</a> requests must match the headers you used in the request to initiate the upload by using <code>CreateMultipartUpload</code>. </p> <p>To perform a multipart upload with encryption using an Amazon Web Services KMS key, the requester must have permission to the <code>kms:Decrypt</code> and <code>kms:GenerateDataKey*</code> actions on the key. These permissions are required because Amazon S3 must decrypt and read data from the encrypted file parts before it completes the multipart upload. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/mpuoverview.html#mpuAndPermissions\">Multipart upload API and permissions</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If your Identity and Access Management (IAM) user or role is in the same Amazon Web Services account as the KMS key, then you must have these permissions on the key policy. If your IAM user or role belongs to a different account than the key, then you must have the permissions on both the key policy and your IAM user or role.</p> <p> For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html\">Protecting Data Using Server-Side Encryption</a>.</p> <dl> <dt>Access Permissions</dt> <dd> <p>When copying an object, you can optionally specify the accounts or groups that should be granted specific permissions on the new object. There are two ways to grant the permissions using the request headers:</p> <ul> <li> <p>Specify a canned ACL with the <code>x-amz-acl</code> request header. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\">Canned ACL</a>.</p> </li> <li> <p>Specify access permissions explicitly with the <code>x-amz-grant-read</code>, <code>x-amz-grant-read-acp</code>, <code>x-amz-grant-write-acp</code>, and <code>x-amz-grant-full-control</code> headers. These parameters map to the set of permissions that Amazon S3 supports in an ACL. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\">Access Control List (ACL) Overview</a>.</p> </li> </ul> <p>You can use either a canned ACL or specify access permissions explicitly. You cannot do both.</p> </dd> <dt>Server-Side- Encryption-Specific Request Headers</dt> <dd> <p>You can optionally tell Amazon S3 to encrypt data at rest using server-side encryption. Server-side encryption is for data encryption at rest. Amazon S3 encrypts your data as it writes it to disks in its data centers and decrypts it when you access it. The option you use depends on whether you want to use Amazon Web Services managed encryption keys or provide your own encryption key. </p> <ul> <li> <p>Use encryption keys managed by Amazon S3 or customer managed key stored in Amazon Web Services Key Management Service (Amazon Web Services KMS) – If you want Amazon Web Services to manage the keys used to encrypt data, specify the following headers in the request.</p> <ul> <li> <p> <code>x-amz-server-side-encryption</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-aws-kms-key-id</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-context</code> </p> </li> </ul> <note> <p>If you specify <code>x-amz-server-side-encryption:aws:kms</code>, but don't provide <code>x-amz-server-side-encryption-aws-kms-key-id</code>, Amazon S3 uses the Amazon Web Services managed key in Amazon Web Services KMS to protect the data.</p> </note> <important> <p>All GET and PUT requests for an object protected by Amazon Web Services KMS fail if you don't make them with SSL or by using SigV4.</p> </important> <p>For more information about server-side encryption with KMS key (SSE-KMS), see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\">Protecting Data Using Server-Side Encryption with KMS keys</a>.</p> </li> <li> <p>Use customer-provided encryption keys – If you want to manage your own encryption keys, provide all the following headers in the request.</p> <ul> <li> <p> <code>x-amz-server-side-encryption-customer-algorithm</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-customer-key</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-customer-key-MD5</code> </p> </li> </ul> <p>For more information about server-side encryption with KMS keys (SSE-KMS), see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\">Protecting Data Using Server-Side Encryption with KMS keys</a>.</p> </li> </ul> </dd> <dt>Access-Control-List (ACL)-Specific Request Headers</dt> <dd> <p>You also can use the following access control–related headers with this operation. By default, all objects are private. Only the owner has full access control. When adding a new object, you can grant permissions to individual Amazon Web Services accounts or to predefined groups defined by Amazon S3. These permissions are then added to the access control list (ACL) on the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html\">Using ACLs</a>. With this operation, you can grant access permissions using one of the following two methods:</p> <ul> <li> <p>Specify a canned ACL (<code>x-amz-acl</code>) — Amazon S3 supports a set of predefined ACLs, known as <i>canned ACLs</i>. Each canned ACL has a predefined set of grantees and permissions. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\">Canned ACL</a>.</p> </li> <li> <p>Specify access permissions explicitly — To explicitly grant access permissions to specific Amazon Web Services accounts or groups, use the following headers. Each header maps to specific permissions that Amazon S3 supports in an ACL. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\">Access Control List (ACL) Overview</a>. In the header, you specify a list of grantees who get the specific permission. To grant permissions explicitly, use:</p> <ul> <li> <p> <code>x-amz-grant-read</code> </p> </li> <li> <p> <code>x-amz-grant-write</code> </p> </li> <li> <p> <code>x-amz-grant-read-acp</code> </p> </li> <li> <p> <code>x-amz-grant-write-acp</code> </p> </li> <li> <p> <code>x-amz-grant-full-control</code> </p> </li> </ul> <p>You specify each grantee as a type=value pair, where the type is one of the following:</p> <ul> <li> <p> <code>id</code> – if the value specified is the canonical user ID of an Amazon Web Services account</p> </li> <li> <p> <code>uri</code> – if you are granting permissions to a predefined group</p> </li> <li> <p> <code>emailAddress</code> – if the value specified is the email address of an Amazon Web Services account</p> <note> <p>Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions: </p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p> US West (Oregon)</p> </li> <li> <p> Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li> </ul> <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\">Regions and Endpoints</a> in the Amazon Web Services General Reference.</p> </note> </li> </ul> <p>For example, the following <code>x-amz-grant-read</code> header grants the Amazon Web Services accounts identified by account IDs permissions to read object data and its metadata:</p> <p> <code>x-amz-grant-read: id=\"11112222333\", id=\"444455556666\" </code> </p> </li> </ul> </dd> </dl> <p>The following operations are related to <code>CreateMultipartUpload</code>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html\">CompleteMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html\">AbortMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\">ListParts</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html\">ListMultipartUploads</a> </p> </li> </ul>",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadInitiate.html"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMultipartUploadOutput"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "x-amz-acl",
            "in": "header",
            "required": false,
            "description": "<p>The canned ACL to apply to the object.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>",
            "schema": {
              "type": "string",
              "enum": [
                "private",
                "public-read",
                "public-read-write",
                "authenticated-read",
                "aws-exec-read",
                "bucket-owner-read",
                "bucket-owner-full-control"
              ]
            }
          },
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "<p>The name of the bucket to which to initiate the upload</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Cache-Control",
            "in": "header",
            "required": false,
            "description": "Specifies caching behavior along the request/reply chain.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Disposition",
            "in": "header",
            "required": false,
            "description": "Specifies presentational information for the object.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Encoding",
            "in": "header",
            "required": false,
            "description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Language",
            "in": "header",
            "required": false,
            "description": "The language the content is in.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "description": "A standard MIME type describing the format of the object data.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expires",
            "in": "header",
            "required": false,
            "description": "The date and time at which the object is no longer cacheable.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "x-amz-grant-full-control",
            "in": "header",
            "required": false,
            "description": "<p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-grant-read",
            "in": "header",
            "required": false,
            "description": "<p>Allows grantee to read the object data and its metadata.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-grant-read-acp",
            "in": "header",
            "required": false,
            "description": "<p>Allows grantee to read the object ACL.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-grant-write-acp",
            "in": "header",
            "required": false,
            "description": "<p>Allows grantee to write the ACL for the applicable object.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "Object key for which the multipart upload is to be initiated.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "x-amz-server-side-encryption",
            "in": "header",
            "required": false,
            "description": "The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).",
            "schema": {
              "type": "string",
              "enum": [
                "AES256",
                "aws:kms"
              ]
            }
          },
          {
            "name": "x-amz-storage-class",
            "in": "header",
            "required": false,
            "description": "By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html\">Storage Classes</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string",
              "enum": [
                "STANDARD",
                "REDUCED_REDUNDANCY",
                "STANDARD_IA",
                "ONEZONE_IA",
                "INTELLIGENT_TIERING",
                "GLACIER",
                "DEEP_ARCHIVE",
                "OUTPOSTS",
                "GLACIER_IR",
                "SNOW"
              ]
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-algorithm",
            "in": "header",
            "required": false,
            "description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-key",
            "in": "header",
            "required": false,
            "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.",
            "schema": {
              "type": "string",
              "format": "password"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-key-MD5",
            "in": "header",
            "required": false,
            "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-server-side-encryption-aws-kms-key-id",
            "in": "header",
            "required": false,
            "description": "Specifies the ID of the symmetric customer managed key to use for object encryption. All GET and PUT requests for an object protected by Amazon Web Services KMS will fail if not made via SSL or using SigV4. For information about configuring using any of the officially supported Amazon Web Services SDKs and Amazon Web Services CLI, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version\">Specifying the Signature Version in Request Authentication</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string",
              "format": "password"
            }
          },
          {
            "name": "x-amz-server-side-encryption-context",
            "in": "header",
            "required": false,
            "description": "Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.",
            "schema": {
              "type": "string",
              "format": "password"
            }
          },
          {
            "name": "x-amz-server-side-encryption-bucket-key-enabled",
            "in": "header",
            "required": false,
            "description": "<p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.</p> <p>Specifying this header with an object action doesn’t affect bucket-level settings for S3 Bucket Key.</p>",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-amz-request-payer",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "requester"
              ],
              "description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>."
            }
          },
          {
            "name": "x-amz-tagging",
            "in": "header",
            "required": false,
            "description": "The tag-set for the object. The tag-set must be encoded as URL Query parameters.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-object-lock-mode",
            "in": "header",
            "required": false,
            "description": "Specifies the Object Lock mode that you want to apply to the uploaded object.",
            "schema": {
              "type": "string",
              "enum": [
                "GOVERNANCE",
                "COMPLIANCE"
              ]
            }
          },
          {
            "name": "x-amz-object-lock-retain-until-date",
            "in": "header",
            "required": false,
            "description": "Specifies the date and time when you want the Object Lock to expire.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "x-amz-object-lock-legal-hold",
            "in": "header",
            "required": false,
            "description": "Specifies whether you want to apply a legal hold to the uploaded object.",
            "schema": {
              "type": "string",
              "enum": [
                "ON",
                "OFF"
              ]
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-algorithm",
            "in": "header",
            "required": false,
            "description": "Indicates the algorithm you want Amazon S3 to use to create the checksum for the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string",
              "enum": [
                "CRC32",
                "CRC32C",
                "SHA1",
                "SHA256"
              ]
            }
          },
          {
            "name": "uploads",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            },
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "text/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "x-amz-meta-": {
                    "description": "A map of metadata to store with the object in S3.",
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/MetadataValue"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ]
    },
    "/{Bucket}/{Key}": {
      "delete": {
        "operationId": "DeleteObject",
        "description": "<p>Removes the null version (if there is one) of an object and inserts a delete marker, which becomes the latest version of the object. If there isn't a null version, Amazon S3 does not remove any objects but will still respond that the command was successful.</p> <p>To remove a specific version, you must be the bucket owner and you must use the version Id subresource. Using this subresource permanently deletes the version. If the object deleted is a delete marker, Amazon S3 sets the response header, <code>x-amz-delete-marker</code>, to true. </p> <p>If the object you want to delete is in a bucket where the bucket versioning configuration is MFA Delete enabled, you must include the <code>x-amz-mfa</code> request header in the DELETE <code>versionId</code> request. Requests that include <code>x-amz-mfa</code> must use HTTPS. </p> <p> For more information about MFA Delete, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html\">Using MFA Delete</a>. To see sample requests that use versioning, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectDELETE.html#ExampleVersionObjectDelete\">Sample Request</a>. </p> <p>You can delete objects by explicitly calling DELETE Object or configure its lifecycle (<a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html\">PutBucketLifecycle</a>) to enable Amazon S3 to remove them for you. If you want to block users or accounts from removing or deleting objects from your bucket, you must deny them the <code>s3:DeleteObject</code>, <code>s3:DeleteObjectVersion</code>, and <code>s3:PutLifeCycleConfiguration</code> actions. </p> <p>The following action is related to <code>DeleteObject</code>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html\">PutObject</a> </p> </li> </ul>",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectDELETE.html"
        },
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteObjectOutput"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "<p>The bucket name of the bucket containing the object. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "Key name of the object to delete.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "x-amz-mfa",
            "in": "header",
            "required": false,
            "description": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device. Required to permanently delete a versioned object if versioning is configured with MFA delete enabled.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "query",
            "required": false,
            "description": "VersionId used to reference a specific version of the object.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-request-payer",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "requester"
              ],
              "description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>."
            }
          },
          {
            "name": "x-amz-bypass-governance-retention",
            "in": "header",
            "required": false,
            "description": "Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process this operation. To use this header, you must have the <code>s3:BypassGovernanceRetention</code> permission.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ],
      "get": {
        "operationId": "GetObject",
        "description": "<p>Retrieves objects from Amazon S3. To use <code>GET</code>, you must have <code>READ</code> access to the object. If you grant <code>READ</code> access to the anonymous user, you can return the object without using an authorization header.</p> <p>An Amazon S3 bucket has no directory hierarchy such as you would find in a typical computer file system. You can, however, create a logical hierarchy by using object key names that imply a folder structure. For example, instead of naming an object <code>sample.jpg</code>, you can name it <code>photos/2006/February/sample.jpg</code>.</p> <p>To get an object from such a logical hierarchy, specify the full key name for the object in the <code>GET</code> operation. For a virtual hosted-style request example, if you have the object <code>photos/2006/February/sample.jpg</code>, specify the resource as <code>/photos/2006/February/sample.jpg</code>. For a path-style request example, if you have the object <code>photos/2006/February/sample.jpg</code> in the bucket named <code>examplebucket</code>, specify the resource as <code>/examplebucket/photos/2006/February/sample.jpg</code>. For more information about request types, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html#VirtualHostingSpecifyBucket\">HTTP Host Header Bucket Specification</a>.</p> <p>For more information about returning the ACL of an object, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html\">GetObjectAcl</a>.</p> <p>If the object you are retrieving is stored in the S3 Glacier or S3 Glacier Deep Archive storage class, or S3 Intelligent-Tiering Archive or S3 Intelligent-Tiering Deep Archive tiers, before you can retrieve the object you must first restore a copy using <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html\">RestoreObject</a>. Otherwise, this action returns an <code>InvalidObjectStateError</code> error. For information about restoring archived objects, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/restoring-objects.html\">Restoring Archived Objects</a>.</p> <p>Encryption request headers, like <code>x-amz-server-side-encryption</code>, should not be sent for GET requests if your object uses server-side encryption with KMS keys (SSE-KMS) or server-side encryption with Amazon S3–managed encryption keys (SSE-S3). If your object does use these types of keys, you’ll get an HTTP 400 BadRequest error.</p> <p>If you encrypt an object by using server-side encryption with customer-provided encryption keys (SSE-C) when you store the object in Amazon S3, then when you GET the object, you must use the following headers:</p> <ul> <li> <p>x-amz-server-side-encryption-customer-algorithm</p> </li> <li> <p>x-amz-server-side-encryption-customer-key</p> </li> <li> <p>x-amz-server-side-encryption-customer-key-MD5</p> </li> </ul> <p>For more information about SSE-C, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html\">Server-Side Encryption (Using Customer-Provided Encryption Keys)</a>.</p> <p>Assuming you have the relevant permission to read object tags, the response also returns the <code>x-amz-tagging-count</code> header that provides the count of number of tags associated with the object. You can use <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html\">GetObjectTagging</a> to retrieve the tag set associated with an object.</p> <p> <b>Permissions</b> </p> <p>You need the relevant read object (or version) permission for this operation. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html\">Specifying Permissions in a Policy</a>. If the object you request does not exist, the error Amazon S3 returns depends on whether you also have the <code>s3:ListBucket</code> permission.</p> <ul> <li> <p>If you have the <code>s3:ListBucket</code> permission on the bucket, Amazon S3 will return an HTTP status code 404 (\"no such key\") error.</p> </li> <li> <p>If you don’t have the <code>s3:ListBucket</code> permission, Amazon S3 will return an HTTP status code 403 (\"access denied\") error.</p> </li> </ul> <p> <b>Versioning</b> </p> <p>By default, the GET action returns the current version of an object. To return a different version, use the <code>versionId</code> subresource.</p> <note> <ul> <li> <p> If you supply a <code>versionId</code>, you need the <code>s3:GetObjectVersion</code> permission to access a specific version of an object. If you request a specific version, you do not need to have the <code>s3:GetObject</code> permission. </p> </li> <li> <p>If the current version of the object is a delete marker, Amazon S3 behaves as if the object was deleted and includes <code>x-amz-delete-marker: true</code> in the response.</p> </li> </ul> </note> <p>For more information about versioning, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html\">PutBucketVersioning</a>. </p> <p> <b>Overriding Response Header Values</b> </p> <p>There are times when you want to override certain response header values in a GET response. For example, you might override the <code>Content-Disposition</code> response header value in your GET request.</p> <p>You can override values for a set of response headers using the following query parameters. These response header values are sent only on a successful request, that is, when status code 200 OK is returned. The set of headers you can override using these parameters is a subset of the headers that Amazon S3 accepts when you create an object. The response headers that you can override for the GET response are <code>Content-Type</code>, <code>Content-Language</code>, <code>Expires</code>, <code>Cache-Control</code>, <code>Content-Disposition</code>, and <code>Content-Encoding</code>. To override these header values in the GET response, you use the following request parameters.</p> <note> <p>You must sign the request, either using an Authorization header or a presigned URL, when using these parameters. They cannot be used with an unsigned (anonymous) request.</p> </note> <ul> <li> <p> <code>response-content-type</code> </p> </li> <li> <p> <code>response-content-language</code> </p> </li> <li> <p> <code>response-expires</code> </p> </li> <li> <p> <code>response-cache-control</code> </p> </li> <li> <p> <code>response-content-disposition</code> </p> </li> <li> <p> <code>response-content-encoding</code> </p> </li> </ul> <p> <b>Additional Considerations about Request Headers</b> </p> <p>If both of the <code>If-Match</code> and <code>If-Unmodified-Since</code> headers are present in the request as follows: <code>If-Match</code> condition evaluates to <code>true</code>, and; <code>If-Unmodified-Since</code> condition evaluates to <code>false</code>; then, S3 returns 200 OK and the data requested. </p> <p>If both of the <code>If-None-Match</code> and <code>If-Modified-Since</code> headers are present in the request as follows:<code> If-None-Match</code> condition evaluates to <code>false</code>, and; <code>If-Modified-Since</code> condition evaluates to <code>true</code>; then, S3 returns 304 Not Modified response code.</p> <p>For more information about conditional requests, see <a href=\"https://tools.ietf.org/html/rfc7232\">RFC 7232</a>.</p> <p>The following operations are related to <code>GetObject</code>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html\">ListBuckets</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html\">GetObjectAcl</a> </p> </li> </ul>",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGET.html"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetObjectOutput"
                }
              }
            }
          },
          "480": {
            "description": "NoSuchKey",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchKey"
                }
              }
            }
          },
          "481": {
            "description": "InvalidObjectState",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidObjectState"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "<p>The bucket name containing the object. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using an Object Lambda access point the hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-object-lambda.<i>Region</i>.amazonaws.com.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "description": "Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "description": "Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "description": "Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "required": false,
            "description": "Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "Key of the object to get.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "Range",
            "in": "header",
            "required": false,
            "description": "<p>Downloads the specified range bytes of an object. For more information about the HTTP Range header, see <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p> <note> <p>Amazon S3 doesn't support retrieving multiple ranges of data per <code>GET</code> request.</p> </note>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response-cache-control",
            "in": "query",
            "required": false,
            "description": "Sets the <code>Cache-Control</code> header of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response-content-disposition",
            "in": "query",
            "required": false,
            "description": "Sets the <code>Content-Disposition</code> header of the response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response-content-encoding",
            "in": "query",
            "required": false,
            "description": "Sets the <code>Content-Encoding</code> header of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response-content-language",
            "in": "query",
            "required": false,
            "description": "Sets the <code>Content-Language</code> header of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response-content-type",
            "in": "query",
            "required": false,
            "description": "Sets the <code>Content-Type</code> header of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response-expires",
            "in": "query",
            "required": false,
            "description": "Sets the <code>Expires</code> header of the response.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "versionId",
            "in": "query",
            "required": false,
            "description": "VersionId used to reference a specific version of the object.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-algorithm",
            "in": "header",
            "required": false,
            "description": "Specifies the algorithm to use to when decrypting the object (for example, AES256).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-key",
            "in": "header",
            "required": false,
            "description": "Specifies the customer-provided encryption key for Amazon S3 used to encrypt the data. This value is used to decrypt the object when recovering it and must match the one used when storing the data. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.",
            "schema": {
              "type": "string",
              "format": "password"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-key-MD5",
            "in": "header",
            "required": false,
            "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-request-payer",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "requester"
              ],
              "description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>."
            }
          },
          {
            "name": "partNumber",
            "in": "query",
            "required": false,
            "description": "Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' GET request for the part specified. Useful for downloading just a part of an object.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-mode",
            "in": "header",
            "required": false,
            "description": "To retrieve the checksum, this mode must be enabled.",
            "schema": {
              "type": "string",
              "enum": [
                "ENABLED"
              ]
            }
          }
        ]
      },
      "head": {
        "operationId": "HeadObject",
        "description": "<p>The HEAD action retrieves metadata from an object without returning the object itself. This action is useful if you're only interested in an object's metadata. To use HEAD, you must have READ access to the object.</p> <p>A <code>HEAD</code> request has the same options as a <code>GET</code> action on an object. The response is identical to the <code>GET</code> response except that there is no response body. Because of this, if the <code>HEAD</code> request generates an error, it returns a generic <code>404 Not Found</code> or <code>403 Forbidden</code> code. It is not possible to retrieve the exact exception beyond these error codes.</p> <p>If you encrypt an object by using server-side encryption with customer-provided encryption keys (SSE-C) when you store the object in Amazon S3, then when you retrieve the metadata from the object, you must use the following headers:</p> <ul> <li> <p>x-amz-server-side-encryption-customer-algorithm</p> </li> <li> <p>x-amz-server-side-encryption-customer-key</p> </li> <li> <p>x-amz-server-side-encryption-customer-key-MD5</p> </li> </ul> <p>For more information about SSE-C, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html\">Server-Side Encryption (Using Customer-Provided Encryption Keys)</a>.</p> <note> <ul> <li> <p>Encryption request headers, like <code>x-amz-server-side-encryption</code>, should not be sent for GET requests if your object uses server-side encryption with KMS keys (SSE-KMS) or server-side encryption with Amazon S3–managed encryption keys (SSE-S3). If your object does use these types of keys, you’ll get an HTTP 400 BadRequest error.</p> </li> <li> <p> The last modified property in this case is the creation date of the object.</p> </li> </ul> </note> <p>Request headers are limited to 8 KB in size. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonRequestHeaders.html\">Common Request Headers</a>.</p> <p>Consider the following when using request headers:</p> <ul> <li> <p> Consideration 1 – If both of the <code>If-Match</code> and <code>If-Unmodified-Since</code> headers are present in the request as follows:</p> <ul> <li> <p> <code>If-Match</code> condition evaluates to <code>true</code>, and;</p> </li> <li> <p> <code>If-Unmodified-Since</code> condition evaluates to <code>false</code>;</p> </li> </ul> <p>Then Amazon S3 returns <code>200 OK</code> and the data requested.</p> </li> <li> <p> Consideration 2 – If both of the <code>If-None-Match</code> and <code>If-Modified-Since</code> headers are present in the request as follows:</p> <ul> <li> <p> <code>If-None-Match</code> condition evaluates to <code>false</code>, and;</p> </li> <li> <p> <code>If-Modified-Since</code> condition evaluates to <code>true</code>;</p> </li> </ul> <p>Then Amazon S3 returns the <code>304 Not Modified</code> response code.</p> </li> </ul> <p>For more information about conditional requests, see <a href=\"https://tools.ietf.org/html/rfc7232\">RFC 7232</a>.</p> <p> <b>Permissions</b> </p> <p>You need the relevant read object (or version) permission for this operation. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html\">Specifying Permissions in a Policy</a>. If the object you request does not exist, the error Amazon S3 returns depends on whether you also have the s3:ListBucket permission.</p> <ul> <li> <p>If you have the <code>s3:ListBucket</code> permission on the bucket, Amazon S3 returns an HTTP status code 404 (\"no such key\") error.</p> </li> <li> <p>If you don’t have the <code>s3:ListBucket</code> permission, Amazon S3 returns an HTTP status code 403 (\"access denied\") error.</p> </li> </ul> <p>The following actions are related to <code>HeadObject</code>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html\">GetObjectAttributes</a> </p> </li> </ul>",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectHEAD.html"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HeadObjectOutput"
                }
              }
            }
          },
          "480": {
            "description": "NoSuchKey",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchKey"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "<p>The name of the bucket containing the object.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "description": "Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "description": "Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "description": "Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "required": false,
            "description": "Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "The object key.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "Range",
            "in": "header",
            "required": false,
            "description": "Because <code>HeadObject</code> returns only the metadata for an object, this parameter has no effect.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "query",
            "required": false,
            "description": "VersionId used to reference a specific version of the object.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-algorithm",
            "in": "header",
            "required": false,
            "description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-key",
            "in": "header",
            "required": false,
            "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.",
            "schema": {
              "type": "string",
              "format": "password"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-key-MD5",
            "in": "header",
            "required": false,
            "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-request-payer",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "requester"
              ],
              "description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>."
            }
          },
          {
            "name": "partNumber",
            "in": "query",
            "required": false,
            "description": "Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' HEAD request for the part specified. Useful querying about the size of the part and the number of parts in this object.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-mode",
            "in": "header",
            "required": false,
            "description": "<p>To retrieve the checksum, this parameter must be enabled.</p> <p>In addition, if you enable <code>ChecksumMode</code> and the object is encrypted with Amazon Web Services Key Management Service (Amazon Web Services KMS), you must have permission to use the <code>kms:Decrypt</code> action for the request to succeed.</p>",
            "schema": {
              "type": "string",
              "enum": [
                "ENABLED"
              ]
            }
          }
        ]
      },
      "put": {
        "operationId": "PutObject",
        "description": "<p>Adds an object to a bucket. You must have WRITE permissions on a bucket to add an object to it.</p> <p>Amazon S3 never adds partial objects; if you receive a success response, Amazon S3 added the entire object to the bucket.</p> <p>Amazon S3 is a distributed system. If it receives multiple write requests for the same object simultaneously, it overwrites all but the last object written. Amazon S3 does not provide object locking; if you need this, make sure to build it into your application layer or use versioning instead.</p> <p>To ensure that data is not corrupted traversing the network, use the <code>Content-MD5</code> header. When you use this header, Amazon S3 checks the object against the provided MD5 value and, if they do not match, returns an error. Additionally, you can calculate the MD5 while putting an object to Amazon S3 and compare the returned ETag to the calculated MD5 value.</p> <note> <ul> <li> <p>To successfully complete the <code>PutObject</code> request, you must have the <code>s3:PutObject</code> in your IAM permissions.</p> </li> <li> <p>To successfully change the objects acl of your <code>PutObject</code> request, you must have the <code>s3:PutObjectAcl</code> in your IAM permissions.</p> </li> <li> <p> The <code>Content-MD5</code> header is required for any request to upload an object with a retention period configured using Amazon S3 Object Lock. For more information about Amazon S3 Object Lock, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html\">Amazon S3 Object Lock Overview</a> in the <i>Amazon S3 User Guide</i>. </p> </li> </ul> </note> <p> <b>Server-side Encryption</b> </p> <p>You can optionally request server-side encryption. With server-side encryption, Amazon S3 encrypts your data as it writes it to disks in its data centers and decrypts the data when you access it. You have the option to provide your own encryption key or use Amazon Web Services managed encryption keys (SSE-S3 or SSE-KMS). For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html\">Using Server-Side Encryption</a>.</p> <p>If you request server-side encryption using Amazon Web Services Key Management Service (SSE-KMS), you can enable an S3 Bucket Key at the object-level. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html\">Amazon S3 Bucket Keys</a> in the <i>Amazon S3 User Guide</i>.</p> <p> <b>Access Control List (ACL)-Specific Request Headers</b> </p> <p>You can use headers to grant ACL- based permissions. By default, all objects are private. Only the owner has full access control. When adding a new object, you can grant permissions to individual Amazon Web Services accounts or to predefined groups defined by Amazon S3. These permissions are then added to the ACL on the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\">Access Control List (ACL) Overview</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-using-rest-api.html\">Managing ACLs Using the REST API</a>. </p> <p>If the bucket that you're uploading objects to uses the bucket owner enforced setting for S3 Object Ownership, ACLs are disabled and no longer affect permissions. Buckets that use this setting only accept PUT requests that don't specify an ACL or PUT requests that specify bucket owner full control ACLs, such as the <code>bucket-owner-full-control</code> canned ACL or an equivalent form of this ACL expressed in the XML format. PUT requests that contain other ACLs (for example, custom grants to certain Amazon Web Services accounts) fail and return a <code>400</code> error with the error code <code>AccessControlListNotSupported</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html\"> Controlling ownership of objects and disabling ACLs</a> in the <i>Amazon S3 User Guide</i>.</p> <note> <p>If your bucket uses the bucket owner enforced setting for Object Ownership, all objects written to the bucket by any account will be owned by the bucket owner.</p> </note> <p> <b>Storage Class Options</b> </p> <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html\">Storage Classes</a> in the <i>Amazon S3 User Guide</i>.</p> <p> <b>Versioning</b> </p> <p>If you enable versioning for a bucket, Amazon S3 automatically generates a unique version ID for the object being stored. Amazon S3 returns this ID in the response. When you enable versioning for a bucket, if Amazon S3 receives multiple write requests for the same object simultaneously, it stores all of the objects.</p> <p>For more information about versioning, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/AddingObjectstoVersioningEnabledBuckets.html\">Adding Objects to Versioning Enabled Buckets</a>. For information about returning the versioning state of a bucket, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html\">GetBucketVersioning</a>. </p> <p class=\"title\"> <b>Related Resources</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html\">CopyObject</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html\">DeleteObject</a> </p> </li> </ul>",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUT.html"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PutObjectOutput"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "x-amz-acl",
            "in": "header",
            "required": false,
            "description": "<p>The canned ACL to apply to the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\">Canned ACL</a>.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>",
            "schema": {
              "type": "string",
              "enum": [
                "private",
                "public-read",
                "public-read-write",
                "authenticated-read",
                "aws-exec-read",
                "bucket-owner-read",
                "bucket-owner-full-control"
              ]
            }
          },
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "<p>The bucket name to which the PUT action was initiated. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Cache-Control",
            "in": "header",
            "required": false,
            "description": " Can be used to specify caching behavior along the request/reply chain. For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Disposition",
            "in": "header",
            "required": false,
            "description": "Specifies presentational information for the object. For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1</a>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Encoding",
            "in": "header",
            "required": false,
            "description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11</a>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Language",
            "in": "header",
            "required": false,
            "description": "The language the content is in.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Length",
            "in": "header",
            "required": false,
            "description": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically. For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13</a>.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Content-MD5",
            "in": "header",
            "required": false,
            "description": "The base64-encoded 128-bit MD5 digest of the message (without the headers) according to RFC 1864. This header can be used as a message integrity check to verify that the data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check. For more information about REST request authentication, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html\">REST Authentication</a>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "description": "A standard MIME type describing the format of the contents. For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17</a>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-sdk-checksum-algorithm",
            "in": "header",
            "required": false,
            "description": "<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>",
            "schema": {
              "type": "string",
              "enum": [
                "CRC32",
                "CRC32C",
                "SHA1",
                "SHA256"
              ]
            }
          },
          {
            "name": "x-amz-checksum-crc32",
            "in": "header",
            "required": false,
            "description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-crc32c",
            "in": "header",
            "required": false,
            "description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-sha1",
            "in": "header",
            "required": false,
            "description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-sha256",
            "in": "header",
            "required": false,
            "description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expires",
            "in": "header",
            "required": false,
            "description": "The date and time at which the object is no longer cacheable. For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21</a>.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "x-amz-grant-full-control",
            "in": "header",
            "required": false,
            "description": "<p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-grant-read",
            "in": "header",
            "required": false,
            "description": "<p>Allows grantee to read the object data and its metadata.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-grant-read-acp",
            "in": "header",
            "required": false,
            "description": "<p>Allows grantee to read the object ACL.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-grant-write-acp",
            "in": "header",
            "required": false,
            "description": "<p>Allows grantee to write the ACL for the applicable object.</p> <p>This action is not supported by Amazon S3 on Outposts.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "Object key for which the PUT action was initiated.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "x-amz-server-side-encryption",
            "in": "header",
            "required": false,
            "description": "The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).",
            "schema": {
              "type": "string",
              "enum": [
                "AES256",
                "aws:kms"
              ]
            }
          },
          {
            "name": "x-amz-storage-class",
            "in": "header",
            "required": false,
            "description": "By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html\">Storage Classes</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string",
              "enum": [
                "STANDARD",
                "REDUCED_REDUNDANCY",
                "STANDARD_IA",
                "ONEZONE_IA",
                "INTELLIGENT_TIERING",
                "GLACIER",
                "DEEP_ARCHIVE",
                "OUTPOSTS",
                "GLACIER_IR",
                "SNOW"
              ]
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-algorithm",
            "in": "header",
            "required": false,
            "description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-key",
            "in": "header",
            "required": false,
            "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.",
            "schema": {
              "type": "string",
              "format": "password"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-key-MD5",
            "in": "header",
            "required": false,
            "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-server-side-encryption-aws-kms-key-id",
            "in": "header",
            "required": false,
            "description": "If <code>x-amz-server-side-encryption</code> is present and has the value of <code>aws:kms</code>, this header specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetrical customer managed key that was used for the object. If you specify <code>x-amz-server-side-encryption:aws:kms</code>, but do not provide<code> x-amz-server-side-encryption-aws-kms-key-id</code>, Amazon S3 uses the Amazon Web Services managed key to protect the data. If the KMS key does not exist in the same account issuing the command, you must use the full ARN and not just the ID. ",
            "schema": {
              "type": "string",
              "format": "password"
            }
          },
          {
            "name": "x-amz-server-side-encryption-context",
            "in": "header",
            "required": false,
            "description": "Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.",
            "schema": {
              "type": "string",
              "format": "password"
            }
          },
          {
            "name": "x-amz-server-side-encryption-bucket-key-enabled",
            "in": "header",
            "required": false,
            "description": "<p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.</p> <p>Specifying this header with a PUT action doesn’t affect bucket-level settings for S3 Bucket Key.</p>",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-amz-request-payer",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "requester"
              ],
              "description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>."
            }
          },
          {
            "name": "x-amz-tagging",
            "in": "header",
            "required": false,
            "description": "The tag-set for the object. The tag-set must be encoded as URL Query parameters. (For example, \"Key1=Value1\")",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-object-lock-mode",
            "in": "header",
            "required": false,
            "description": "The Object Lock mode that you want to apply to this object.",
            "schema": {
              "type": "string",
              "enum": [
                "GOVERNANCE",
                "COMPLIANCE"
              ]
            }
          },
          {
            "name": "x-amz-object-lock-retain-until-date",
            "in": "header",
            "required": false,
            "description": "The date and time when you want this object's Object Lock to expire. Must be formatted as a timestamp parameter.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "x-amz-object-lock-legal-hold",
            "in": "header",
            "required": false,
            "description": "Specifies whether a legal hold will be applied to this object. For more information about S3 Object Lock, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html\">Object Lock</a>.",
            "schema": {
              "type": "string",
              "enum": [
                "ON",
                "OFF"
              ]
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "text/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "Body": {
                    "description": "Object data.",
                    "type": "string"
                  },
                  "x-amz-meta-": {
                    "description": "A map of metadata to store with the object in S3.",
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/MetadataValue"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{Bucket}#delete": {
      "post": {
        "operationId": "DeleteObjects",
        "description": "<p>This action enables you to delete multiple objects from a bucket using a single HTTP request. If you know the object keys that you want to delete, then this action provides a suitable alternative to sending individual delete requests, reducing per-request overhead.</p> <p>The request contains a list of up to 1000 keys that you want to delete. In the XML, you provide the object key names, and optionally, version IDs if you want to delete a specific version of the object from a versioning-enabled bucket. For each key, Amazon S3 performs a delete action and returns the result of that delete, success, or failure, in the response. Note that if the object specified in the request is not found, Amazon S3 returns the result as deleted.</p> <p> The action supports two modes for the response: verbose and quiet. By default, the action uses verbose mode in which the response includes the result of deletion of each key in your request. In quiet mode the response includes only keys where the delete action encountered an error. For a successful deletion, the action does not return any information about the delete in the response body.</p> <p>When performing this action on an MFA Delete enabled bucket, that attempts to delete any versioned objects, you must include an MFA token. If you do not provide one, the entire request will fail, even if there are non-versioned objects you are trying to delete. If you provide an invalid token, whether there are versioned keys in the request or not, the entire Multi-Object Delete request will fail. For information about MFA Delete, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html#MultiFactorAuthenticationDelete\"> MFA Delete</a>.</p> <p>Finally, the Content-MD5 header is required for all Multi-Object Delete requests. Amazon S3 uses the header value to ensure that your request body has not been altered in transit.</p> <p>The following operations are related to <code>DeleteObjects</code>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html\">CompleteMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\">ListParts</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html\">AbortMultipartUpload</a> </p> </li> </ul>",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/multiobjectdeleteapi.html"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteObjectsOutput"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "<p>The bucket name containing the objects to delete. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-mfa",
            "in": "header",
            "required": false,
            "description": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device. Required to permanently delete a versioned object if versioning is configured with MFA delete enabled.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-request-payer",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "requester"
              ],
              "description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>."
            }
          },
          {
            "name": "x-amz-bypass-governance-retention",
            "in": "header",
            "required": false,
            "description": "Specifies whether you want to delete this object even if it has a Governance-type Object Lock in place. To use this header, you must have the <code>s3:BypassGovernanceRetention</code> permission.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-sdk-checksum-algorithm",
            "in": "header",
            "required": false,
            "description": "<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p> <p>This checksum algorithm must be the same for all parts and it match the checksum value supplied in the <code>CreateMultipartUpload</code> request.</p>",
            "schema": {
              "type": "string",
              "enum": [
                "CRC32",
                "CRC32C",
                "SHA1",
                "SHA256"
              ]
            }
          },
          {
            "name": "delete",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            },
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "text/xml": {
              "schema": {
                "type": "object",
                "required": [
                  "Delete"
                ],
                "properties": {
                  "Delete": {
                    "description": "Container for the objects to delete.",
                    "type": "object",
                    "properties": {
                      "Objects": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/ObjectIdentifierList"
                          },
                          {
                            "xml": {
                              "name": "Object"
                            },
                            "description": "The objects to delete."
                          }
                        ]
                      },
                      "Quiet": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Quiet"
                          },
                          {
                            "description": "Element to enable quiet mode for the request. When you add this element, you must set its value to true."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ]
    },
    "/{Bucket}#location": {
      "get": {
        "operationId": "GetBucketLocation",
        "description": "<p>Returns the Region the bucket resides in. You set the bucket's Region using the <code>LocationConstraint</code> request parameter in a <code>CreateBucket</code> request. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a>.</p> <p>To use this implementation of the operation, you must be the bucket owner.</p> <p>To use this API against an access point, provide the alias of the access point in place of the bucket name.</p> <p>The following operations are related to <code>GetBucketLocation</code>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a> </p> </li> </ul>",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlocation.html"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetBucketLocationOutput"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "The name of the bucket for which to get the location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            },
            "allowEmptyValue": true
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ]
    },
    "/{Bucket}/{Key}#attributes&x-amz-object-attributes": {
      "get": {
        "operationId": "GetObjectAttributes",
        "description": "<p>Retrieves all the metadata from an object without returning the object itself. This action is useful if you're interested only in an object's metadata. To use <code>GetObjectAttributes</code>, you must have READ access to the object.</p> <p> <code>GetObjectAttributes</code> combines the functionality of <code>GetObjectAcl</code>, <code>GetObjectLegalHold</code>, <code>GetObjectLockConfiguration</code>, <code>GetObjectRetention</code>, <code>GetObjectTagging</code>, <code>HeadObject</code>, and <code>ListParts</code>. All of the data returned with each of those individual calls can be returned with a single call to <code>GetObjectAttributes</code>.</p> <p>If you encrypt an object by using server-side encryption with customer-provided encryption keys (SSE-C) when you store the object in Amazon S3, then when you retrieve the metadata from the object, you must use the following headers:</p> <ul> <li> <p> <code>x-amz-server-side-encryption-customer-algorithm</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-customer-key</code> </p> </li> <li> <p> <code>x-amz-server-side-encryption-customer-key-MD5</code> </p> </li> </ul> <p>For more information about SSE-C, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html\">Server-Side Encryption (Using Customer-Provided Encryption Keys)</a> in the <i>Amazon S3 User Guide</i>.</p> <note> <ul> <li> <p>Encryption request headers, such as <code>x-amz-server-side-encryption</code>, should not be sent for GET requests if your object uses server-side encryption with Amazon Web Services KMS keys stored in Amazon Web Services Key Management Service (SSE-KMS) or server-side encryption with Amazon S3 managed encryption keys (SSE-S3). If your object does use these types of keys, you'll get an HTTP <code>400 Bad Request</code> error.</p> </li> <li> <p> The last modified property in this case is the creation date of the object.</p> </li> </ul> </note> <p>Consider the following when using request headers:</p> <ul> <li> <p> If both of the <code>If-Match</code> and <code>If-Unmodified-Since</code> headers are present in the request as follows, then Amazon S3 returns the HTTP status code <code>200 OK</code> and the data requested:</p> <ul> <li> <p> <code>If-Match</code> condition evaluates to <code>true</code>.</p> </li> <li> <p> <code>If-Unmodified-Since</code> condition evaluates to <code>false</code>.</p> </li> </ul> </li> <li> <p>If both of the <code>If-None-Match</code> and <code>If-Modified-Since</code> headers are present in the request as follows, then Amazon S3 returns the HTTP status code <code>304 Not Modified</code>:</p> <ul> <li> <p> <code>If-None-Match</code> condition evaluates to <code>false</code>.</p> </li> <li> <p> <code>If-Modified-Since</code> condition evaluates to <code>true</code>.</p> </li> </ul> </li> </ul> <p>For more information about conditional requests, see <a href=\"https://tools.ietf.org/html/rfc7232\">RFC 7232</a>.</p> <p> <b>Permissions</b> </p> <p>The permissions that you need to use this operation depend on whether the bucket is versioned. If the bucket is versioned, you need both the <code>s3:GetObjectVersion</code> and <code>s3:GetObjectVersionAttributes</code> permissions for this operation. If the bucket is not versioned, you need the <code>s3:GetObject</code> and <code>s3:GetObjectAttributes</code> permissions. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html\">Specifying Permissions in a Policy</a> in the <i>Amazon S3 User Guide</i>. If the object that you request does not exist, the error Amazon S3 returns depends on whether you also have the <code>s3:ListBucket</code> permission.</p> <ul> <li> <p>If you have the <code>s3:ListBucket</code> permission on the bucket, Amazon S3 returns an HTTP status code <code>404 Not Found</code> (\"no such key\") error.</p> </li> <li> <p>If you don't have the <code>s3:ListBucket</code> permission, Amazon S3 returns an HTTP status code <code>403 Forbidden</code> (\"access denied\") error.</p> </li> </ul> <p>The following actions are related to <code>GetObjectAttributes</code>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html\">GetObjectAcl</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectLegalHold.html\">GetObjectLegalHold</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectLockConfiguration.html\">GetObjectLockConfiguration</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectRetention.html\">GetObjectRetention</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html\">GetObjectTagging</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_HeadObject.html\">HeadObject</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\">ListParts</a> </p> </li> </ul>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetObjectAttributesOutput"
                }
              }
            }
          },
          "480": {
            "description": "NoSuchKey",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchKey"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "<p>The name of the bucket that contains the object.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "The object key.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "versionId",
            "in": "query",
            "required": false,
            "description": "The version ID used to reference a specific version of the object.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-max-parts",
            "in": "header",
            "required": false,
            "description": "Sets the maximum number of parts to return.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "x-amz-part-number-marker",
            "in": "header",
            "required": false,
            "description": "Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-algorithm",
            "in": "header",
            "required": false,
            "description": "Specifies the algorithm to use when encrypting the object (for example, AES256).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-key",
            "in": "header",
            "required": false,
            "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.",
            "schema": {
              "type": "string",
              "format": "password"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-key-MD5",
            "in": "header",
            "required": false,
            "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-request-payer",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "requester"
              ],
              "description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>."
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-object-attributes",
            "in": "header",
            "required": true,
            "description": "An XML header that specifies the fields at the root level that you want returned in the response. Fields that you do not specify are not returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ObjectAttributes"
              }
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            },
            "allowEmptyValue": true
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ]
    },
    "/{Bucket}#object-lock": {
      "get": {
        "operationId": "GetObjectLockConfiguration",
        "description": "<p>Gets the Object Lock configuration for a bucket. The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html\">Locking Objects</a>.</p> <p>The following action is related to <code>GetObjectLockConfiguration</code>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html\">GetObjectAttributes</a> </p> </li> </ul>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetObjectLockConfigurationOutput"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "<p>The bucket whose Object Lock configuration you want to retrieve.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "object-lock",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            },
            "allowEmptyValue": true
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ],
      "put": {
        "operationId": "PutObjectLockConfiguration",
        "description": "<p>Places an Object Lock configuration on the specified bucket. The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html\">Locking Objects</a>. </p> <note> <ul> <li> <p>The <code>DefaultRetention</code> settings require both a mode and a period.</p> </li> <li> <p>The <code>DefaultRetention</code> period can be either <code>Days</code> or <code>Years</code> but you must select one. You cannot specify <code>Days</code> and <code>Years</code> at the same time.</p> </li> <li> <p>You can only enable Object Lock for new buckets. If you want to turn on Object Lock for an existing bucket, contact Amazon Web Services Support.</p> </li> </ul> </note>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PutObjectLockConfigurationOutput"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "The bucket whose Object Lock configuration you want to create or replace.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-request-payer",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "requester"
              ],
              "description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>."
            }
          },
          {
            "name": "x-amz-bucket-object-lock-token",
            "in": "header",
            "required": false,
            "description": "A token to allow Object Lock to be enabled for an existing bucket.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-MD5",
            "in": "header",
            "required": false,
            "description": "<p>The MD5 hash for the request body.</p> <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-sdk-checksum-algorithm",
            "in": "header",
            "required": false,
            "description": "<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>",
            "schema": {
              "type": "string",
              "enum": [
                "CRC32",
                "CRC32C",
                "SHA1",
                "SHA256"
              ]
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "object-lock",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            },
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "text/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "ObjectLockConfiguration": {
                    "description": "The container element for Object Lock configuration parameters.",
                    "type": "object",
                    "properties": {
                      "ObjectLockEnabled": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/ObjectLockEnabled"
                          },
                          {
                            "description": "Indicates whether this bucket has an Object Lock configuration enabled. Enable <code>ObjectLockEnabled</code> when you apply <code>ObjectLockConfiguration</code> to a bucket. "
                          }
                        ]
                      },
                      "Rule": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/ObjectLockRule"
                          },
                          {
                            "description": "Specifies the Object Lock rule for the specified object. Enable the this rule when you apply <code>ObjectLockConfiguration</code> to a bucket. Bucket settings require both a mode and a period. The period can be either <code>Days</code> or <code>Years</code> but you must select one. You cannot specify <code>Days</code> and <code>Years</code> at the same time."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "operationId": "ListBuckets",
        "description": "Returns a list of all buckets owned by the authenticated sender of the request. To use this operation, you must have the <code>s3:ListAllMyBuckets</code> permission.",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTServiceGET.html"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListBucketsOutput"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ]
    },
    "/{Bucket}#uploads": {
      "get": {
        "operationId": "ListMultipartUploads",
        "description": "<p>This action lists in-progress multipart uploads. An in-progress multipart upload is a multipart upload that has been initiated using the Initiate Multipart Upload request, but has not yet been completed or aborted.</p> <p>This action returns at most 1,000 multipart uploads in the response. 1,000 multipart uploads is the maximum number of uploads a response can include, which is also the default value. You can further limit the number of uploads in a response by specifying the <code>max-uploads</code> parameter in the response. If additional multipart uploads satisfy the list criteria, the response will contain an <code>IsTruncated</code> element with the value true. To list the additional multipart uploads, use the <code>key-marker</code> and <code>upload-id-marker</code> request parameters.</p> <p>In the response, the uploads are sorted by key. If your application has initiated more than one multipart upload using the same object key, then uploads in the response are first sorted by key. Additionally, uploads are sorted in ascending order within each key by the upload initiation time.</p> <p>For more information on multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html\">Uploading Objects Using Multipart Upload</a>.</p> <p>For information on permissions required to use the multipart upload API, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\">Multipart Upload and Permissions</a>.</p> <p>The following operations are related to <code>ListMultipartUploads</code>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html\">CompleteMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\">ListParts</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html\">AbortMultipartUpload</a> </p> </li> </ul>",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListMPUpload.html"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListMultipartUploadsOutput"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "<p>The name of the bucket to which the multipart upload was initiated. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delimiter",
            "in": "query",
            "required": false,
            "description": "<p>Character you use to group keys.</p> <p>All keys that contain the same string between the prefix, if specified, and the first occurrence of the delimiter after the prefix are grouped under a single result element, <code>CommonPrefixes</code>. If you don't specify the prefix parameter, then the substring starts at the beginning of the key. The keys that are grouped under <code>CommonPrefixes</code> result element are not returned elsewhere in the response.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encoding-type",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "url"
              ],
              "description": "Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response."
            }
          },
          {
            "name": "key-marker",
            "in": "query",
            "required": false,
            "description": "<p>Together with upload-id-marker, this parameter specifies the multipart upload after which listing should begin.</p> <p>If <code>upload-id-marker</code> is not specified, only the keys lexicographically greater than the specified <code>key-marker</code> will be included in the list.</p> <p>If <code>upload-id-marker</code> is specified, any multipart uploads for a key equal to the <code>key-marker</code> might also be included, provided those multipart uploads have upload IDs lexicographically greater than the specified <code>upload-id-marker</code>.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max-uploads",
            "in": "query",
            "required": false,
            "description": "Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response body. 1,000 is the maximum number of uploads that can be returned in a response.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "description": "Lists in-progress uploads only for those keys that begin with the specified prefix. You can use prefixes to separate a bucket into different grouping of keys. (You can think of using prefix to make groups in the same way you'd use a folder in a file system.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upload-id-marker",
            "in": "query",
            "required": false,
            "description": "Together with key-marker, specifies the multipart upload after which listing should begin. If key-marker is not specified, the upload-id-marker parameter is ignored. Otherwise, any multipart uploads for a key equal to the key-marker might be included in the list only if they have an upload ID lexicographically greater than the specified <code>upload-id-marker</code>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxUploads",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "KeyMarker",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "UploadIdMarker",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "uploads",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            },
            "allowEmptyValue": true
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ]
    },
    "/{Bucket}#versions": {
      "get": {
        "operationId": "ListObjectVersions",
        "description": "<p>Returns metadata about all versions of the objects in a bucket. You can also use request parameters as selection criteria to return metadata about a subset of all the object versions.</p> <important> <p> To use this operation, you must have permissions to perform the <code>s3:ListBucketVersions</code> action. Be aware of the name difference. </p> </important> <note> <p> A 200 OK response can contain valid or invalid XML. Make sure to design your application to parse the contents of the response and handle it appropriately.</p> </note> <p>To use this operation, you must have READ access to the bucket.</p> <p>This action is not supported by Amazon S3 on Outposts.</p> <p>The following operations are related to <code>ListObjectVersions</code>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html\">ListObjectsV2</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html\">PutObject</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html\">DeleteObject</a> </p> </li> </ul>",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETVersion.html"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListObjectVersionsOutput"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "The bucket name that contains the objects. ",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delimiter",
            "in": "query",
            "required": false,
            "description": "A delimiter is a character that you specify to group keys. All keys that contain the same string between the <code>prefix</code> and the first occurrence of the delimiter are grouped under a single result element in CommonPrefixes. These groups are counted as one result against the max-keys limitation. These keys are not returned elsewhere in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encoding-type",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "url"
              ],
              "description": "Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response."
            }
          },
          {
            "name": "key-marker",
            "in": "query",
            "required": false,
            "description": "Specifies the key to start with when listing objects in a bucket.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max-keys",
            "in": "query",
            "required": false,
            "description": "Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more. If additional keys satisfy the search criteria, but were not returned because max-keys was exceeded, the response contains &lt;isTruncated&gt;true&lt;/isTruncated&gt;. To return the additional keys, see key-marker and version-id-marker.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "description": "Use this parameter to select only those keys that begin with the specified prefix. You can use prefixes to separate a bucket into different groupings of keys. (You can think of using prefix to make groups in the same way you'd use a folder in a file system.) You can use prefix with delimiter to roll up numerous objects into a single result under CommonPrefixes. ",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version-id-marker",
            "in": "query",
            "required": false,
            "description": "Specifies the object version you want to start listing from.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxKeys",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "KeyMarker",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "VersionIdMarker",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "versions",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            },
            "allowEmptyValue": true
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ]
    },
    "/{Bucket}#list-type=2": {
      "get": {
        "operationId": "ListObjectsV2",
        "description": "<p>Returns some or all (up to 1,000) of the objects in a bucket with each request. You can use the request parameters as selection criteria to return a subset of the objects in a bucket. A <code>200 OK</code> response can contain valid or invalid XML. Make sure to design your application to parse the contents of the response and handle it appropriately. Objects are returned sorted in an ascending order of the respective key names in the list. For more information about listing objects, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ListingKeysUsingAPIs.html\">Listing object keys programmatically</a> </p> <p>To use this operation, you must have READ access to the bucket.</p> <p>To use this action in an Identity and Access Management (IAM) policy, you must have permissions to perform the <code>s3:ListBucket</code> action. The bucket owner has this permission by default and can grant this permission to others. For more information about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html\">Managing Access Permissions to Your Amazon S3 Resources</a>.</p> <important> <p>This section describes the latest revision of this action. We recommend that you use this revised API for application development. For backward compatibility, Amazon S3 continues to support the prior version of this API, <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html\">ListObjects</a>.</p> </important> <p>To get a list of your buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html\">ListBuckets</a>.</p> <p>The following operations are related to <code>ListObjectsV2</code>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html\">PutObject</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a> </p> </li> </ul>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListObjectsV2Output"
                }
              }
            }
          },
          "480": {
            "description": "NoSuchBucket",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NoSuchBucket"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "<p>Bucket name to list. </p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delimiter",
            "in": "query",
            "required": false,
            "description": "A delimiter is a character you use to group keys.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encoding-type",
            "in": "query",
            "required": false,
            "description": "Encoding type used by Amazon S3 to encode object keys in the response.",
            "schema": {
              "type": "string",
              "enum": [
                "url"
              ],
              "description": "Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response."
            }
          },
          {
            "name": "max-keys",
            "in": "query",
            "required": false,
            "description": "Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "description": "Limits the response to keys that begin with the specified prefix.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuation-token",
            "in": "query",
            "required": false,
            "description": "ContinuationToken indicates Amazon S3 that the list is being continued on this bucket with a token. ContinuationToken is obfuscated and is not a real key.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fetch-owner",
            "in": "query",
            "required": false,
            "description": "The owner field is not present in listV2 by default, if you want to return owner field with each key in the result then set the fetch owner field to true.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "start-after",
            "in": "query",
            "required": false,
            "description": "StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. StartAfter can be any key in the bucket.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-request-payer",
            "in": "header",
            "required": false,
            "description": "Confirms that the requester knows that she or he will be charged for the list objects request in V2 style. Bucket owners need not specify this parameter in their requests.",
            "schema": {
              "type": "string",
              "enum": [
                "requester"
              ],
              "description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>."
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxKeys",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "ContinuationToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "list-type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2"
              ]
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ]
    },
    "/{Bucket}/{Key}#partNumber&uploadId": {
      "put": {
        "operationId": "UploadPart",
        "description": "<p>Uploads a part in a multipart upload.</p> <note> <p>In this operation, you provide part data in your request. However, you have an option to specify your existing Amazon S3 object as a data source for the part you are uploading. To upload a part from an existing object, you use the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html\">UploadPartCopy</a> operation. </p> </note> <p>You must initiate a multipart upload (see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a>) before you can upload any part. In response to your initiate request, Amazon S3 returns an upload ID, a unique identifier, that you must include in your upload part request.</p> <p>Part numbers can be any number from 1 to 10,000, inclusive. A part number uniquely identifies a part and also defines its position within the object being created. If you upload a new part using the same part number that was used with a previous part, the previously uploaded part is overwritten.</p> <p>For information about maximum and minimum part sizes and other multipart upload specifications, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/qfacts.html\">Multipart upload limits</a> in the <i>Amazon S3 User Guide</i>.</p> <p>To ensure that data is not corrupted when traversing the network, specify the <code>Content-MD5</code> header in the upload part request. Amazon S3 checks the part data against the provided MD5 value. If they do not match, Amazon S3 returns an error. </p> <p>If the upload request is signed with Signature Version 4, then Amazon Web Services S3 uses the <code>x-amz-content-sha256</code> header as a checksum instead of <code>Content-MD5</code>. For more information see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html\">Authenticating Requests: Using the Authorization Header (Amazon Web Services Signature Version 4)</a>. </p> <p> <b>Note:</b> After you initiate multipart upload and upload one or more parts, you must either complete or abort multipart upload in order to stop getting charged for storage of the uploaded parts. Only after you either complete or abort multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts storage.</p> <p>For more information on multipart uploads, go to <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html\">Multipart Upload Overview</a> in the <i>Amazon S3 User Guide </i>.</p> <p>For information on the permissions required to use the multipart upload API, go to <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\">Multipart Upload and Permissions</a> in the <i>Amazon S3 User Guide</i>.</p> <p>You can optionally request server-side encryption where Amazon S3 encrypts your data as it writes it to disks in its data centers and decrypts it for you when you access it. You have the option of providing your own encryption key, or you can use the Amazon Web Services managed encryption keys. If you choose to provide your own encryption key, the request headers you provide in the request must match the headers you used in the request to initiate the upload by using <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a>. For more information, go to <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html\">Using Server-Side Encryption</a> in the <i>Amazon S3 User Guide</i>.</p> <p>Server-side encryption is supported by the S3 Multipart Upload actions. Unless you are using a customer-provided encryption key, you don't need to specify the encryption parameters in each UploadPart request. Instead, you only need to specify the server-side encryption parameters in the initial Initiate Multipart request. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a>.</p> <p>If you requested server-side encryption using a customer-provided encryption key in your initiate multipart upload request, you must provide identical encryption information in each part upload using the following headers.</p> <ul> <li> <p>x-amz-server-side-encryption-customer-algorithm</p> </li> <li> <p>x-amz-server-side-encryption-customer-key</p> </li> <li> <p>x-amz-server-side-encryption-customer-key-MD5</p> </li> </ul> <p class=\"title\"> <b>Special Errors</b> </p> <ul> <li> <ul> <li> <p> <i>Code: NoSuchUpload</i> </p> </li> <li> <p> <i>Cause: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</i> </p> </li> <li> <p> <i> HTTP Status Code: 404 Not Found </i> </p> </li> <li> <p> <i>SOAP Fault Code Prefix: Client</i> </p> </li> </ul> </li> </ul> <p class=\"title\"> <b>Related Resources</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html\">CompleteMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html\">AbortMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\">ListParts</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html\">ListMultipartUploads</a> </p> </li> </ul>",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPart.html"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UploadPartOutput"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "<p>The name of the bucket to which the multipart upload was initiated.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Length",
            "in": "header",
            "required": false,
            "description": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Content-MD5",
            "in": "header",
            "required": false,
            "description": "The base64-encoded 128-bit MD5 digest of the part data. This parameter is auto-populated when using the command from the CLI. This parameter is required if object lock parameters are specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-sdk-checksum-algorithm",
            "in": "header",
            "required": false,
            "description": "<p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p> <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p> <p>This checksum algorithm must be the same for all parts and it match the checksum value supplied in the <code>CreateMultipartUpload</code> request.</p>",
            "schema": {
              "type": "string",
              "enum": [
                "CRC32",
                "CRC32C",
                "SHA1",
                "SHA256"
              ]
            }
          },
          {
            "name": "x-amz-checksum-crc32",
            "in": "header",
            "required": false,
            "description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-crc32c",
            "in": "header",
            "required": false,
            "description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-sha1",
            "in": "header",
            "required": false,
            "description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-checksum-sha256",
            "in": "header",
            "required": false,
            "description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "Object key for which the multipart upload was initiated.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "partNumber",
            "in": "query",
            "required": true,
            "description": "Part number of part being uploaded. This is a positive integer between 1 and 10,000.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "uploadId",
            "in": "query",
            "required": true,
            "description": "Upload ID identifying the multipart upload whose part is being uploaded.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-algorithm",
            "in": "header",
            "required": false,
            "description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-key",
            "in": "header",
            "required": false,
            "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm header</code>. This must be the same encryption key specified in the initiate multipart upload request.",
            "schema": {
              "type": "string",
              "format": "password"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-key-MD5",
            "in": "header",
            "required": false,
            "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-request-payer",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "requester"
              ],
              "description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>."
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "text/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "Body": {
                    "description": "Object data.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ]
    },
    "/{Bucket}/{Key}#x-amz-copy-source&partNumber&uploadId": {
      "put": {
        "operationId": "UploadPartCopy",
        "description": "<p>Uploads a part by copying data from an existing object as data source. You specify the data source by adding the request header <code>x-amz-copy-source</code> in your request and a byte range by adding the request header <code>x-amz-copy-source-range</code> in your request. </p> <p>For information about maximum and minimum part sizes and other multipart upload specifications, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/qfacts.html\">Multipart upload limits</a> in the <i>Amazon S3 User Guide</i>. </p> <note> <p>Instead of using an existing object as part data, you might use the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a> action and provide data in your request.</p> </note> <p>You must initiate a multipart upload before you can upload any part. In response to your initiate request. Amazon S3 returns a unique identifier, the upload ID, that you must include in your upload part request.</p> <p>For more information about using the <code>UploadPartCopy</code> operation, see the following:</p> <ul> <li> <p>For conceptual information about multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html\">Uploading Objects Using Multipart Upload</a> in the <i>Amazon S3 User Guide</i>.</p> </li> <li> <p>For information about permissions required to use the multipart upload API, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\">Multipart Upload and Permissions</a> in the <i>Amazon S3 User Guide</i>.</p> </li> <li> <p>For information about copying objects using a single atomic action vs. a multipart upload, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectOperations.html\">Operations on Objects</a> in the <i>Amazon S3 User Guide</i>.</p> </li> <li> <p>For information about using server-side encryption with customer-provided encryption keys with the <code>UploadPartCopy</code> operation, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html\">CopyObject</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a>.</p> </li> </ul> <p>Note the following additional considerations about the request headers <code>x-amz-copy-source-if-match</code>, <code>x-amz-copy-source-if-none-match</code>, <code>x-amz-copy-source-if-unmodified-since</code>, and <code>x-amz-copy-source-if-modified-since</code>:</p> <p> </p> <ul> <li> <p> <b>Consideration 1</b> - If both of the <code>x-amz-copy-source-if-match</code> and <code>x-amz-copy-source-if-unmodified-since</code> headers are present in the request as follows:</p> <p> <code>x-amz-copy-source-if-match</code> condition evaluates to <code>true</code>, and;</p> <p> <code>x-amz-copy-source-if-unmodified-since</code> condition evaluates to <code>false</code>;</p> <p>Amazon S3 returns <code>200 OK</code> and copies the data. </p> </li> <li> <p> <b>Consideration 2</b> - If both of the <code>x-amz-copy-source-if-none-match</code> and <code>x-amz-copy-source-if-modified-since</code> headers are present in the request as follows:</p> <p> <code>x-amz-copy-source-if-none-match</code> condition evaluates to <code>false</code>, and;</p> <p> <code>x-amz-copy-source-if-modified-since</code> condition evaluates to <code>true</code>;</p> <p>Amazon S3 returns <code>412 Precondition Failed</code> response code. </p> </li> </ul> <p> <b>Versioning</b> </p> <p>If your bucket has versioning enabled, you could have multiple versions of the same object. By default, <code>x-amz-copy-source</code> identifies the current version of the object to copy. If the current version is a delete marker and you don't specify a versionId in the <code>x-amz-copy-source</code>, Amazon S3 returns a 404 error, because the object does not exist. If you specify versionId in the <code>x-amz-copy-source</code> and the versionId is a delete marker, Amazon S3 returns an HTTP 400 error, because you are not allowed to specify a delete marker as a version for the <code>x-amz-copy-source</code>. </p> <p>You can optionally specify a specific version of the source object to copy by adding the <code>versionId</code> subresource as shown in the following example:</p> <p> <code>x-amz-copy-source: /bucket/object?versionId=version id</code> </p> <p class=\"title\"> <b>Special Errors</b> </p> <ul> <li> <ul> <li> <p> <i>Code: NoSuchUpload</i> </p> </li> <li> <p> <i>Cause: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</i> </p> </li> <li> <p> <i>HTTP Status Code: 404 Not Found</i> </p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code: InvalidRequest</i> </p> </li> <li> <p> <i>Cause: The specified copy source is not supported as a byte-range copy source.</i> </p> </li> <li> <p> <i>HTTP Status Code: 400 Bad Request</i> </p> </li> </ul> </li> </ul> <p class=\"title\"> <b>Related Resources</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html\">CompleteMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html\">AbortMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\">ListParts</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html\">ListMultipartUploads</a> </p> </li> </ul>",
        "externalDocs": {
          "url": "http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPartCopy.html"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UploadPartCopyOutput"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Bucket",
            "in": "path",
            "required": true,
            "description": "<p>The bucket name.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-copy-source",
            "in": "header",
            "required": true,
            "description": "<p>Specifies the source object for the copy operation. You specify the value in one of two formats, depending on whether you want to access the source object through an <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html\">access point</a>:</p> <ul> <li> <p>For objects not accessed through an access point, specify the name of the source bucket and key of the source object, separated by a slash (/). For example, to copy the object <code>reports/january.pdf</code> from the bucket <code>awsexamplebucket</code>, use <code>awsexamplebucket/reports/january.pdf</code>. The value must be URL-encoded.</p> </li> <li> <p>For objects accessed through access points, specify the Amazon Resource Name (ARN) of the object as accessed through the access point, in the format <code>arn:aws:s3:&lt;Region&gt;:&lt;account-id&gt;:accesspoint/&lt;access-point-name&gt;/object/&lt;key&gt;</code>. For example, to copy the object <code>reports/january.pdf</code> through access point <code>my-access-point</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point/object/reports/january.pdf</code>. The value must be URL encoded.</p> <note> <p>Amazon S3 supports copy operations using access points only when the source and destination buckets are in the same Amazon Web Services Region.</p> </note> <p>Alternatively, for objects accessed through Amazon S3 on Outposts, specify the ARN of the object as accessed in the format <code>arn:aws:s3-outposts:&lt;Region&gt;:&lt;account-id&gt;:outpost/&lt;outpost-id&gt;/object/&lt;key&gt;</code>. For example, to copy the object <code>reports/january.pdf</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/object/reports/january.pdf</code>. The value must be URL-encoded. </p> </li> </ul> <p>To copy a specific version of an object, append <code>?versionId=&lt;version-id&gt;</code> to the value (for example, <code>awsexamplebucket/reports/january.pdf?versionId=QUpfdndhfd8438MNFDN93jdnJFkdmqnh893</code>). If you don't specify a version ID, Amazon S3 copies the latest version of the source object.</p>",
            "schema": {
              "type": "string",
              "pattern": "\\/.+\\/.+"
            }
          },
          {
            "name": "x-amz-copy-source-if-match",
            "in": "header",
            "required": false,
            "description": "Copies the object if its entity tag (ETag) matches the specified tag.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-copy-source-if-modified-since",
            "in": "header",
            "required": false,
            "description": "Copies the object if it has been modified since the specified time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "x-amz-copy-source-if-none-match",
            "in": "header",
            "required": false,
            "description": "Copies the object if its entity tag (ETag) is different than the specified ETag.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-copy-source-if-unmodified-since",
            "in": "header",
            "required": false,
            "description": "Copies the object if it hasn't been modified since the specified time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "x-amz-copy-source-range",
            "in": "header",
            "required": false,
            "description": "The range of bytes to copy from the source object. The range value must use the form bytes=first-last, where the first and last are the zero-based byte offsets to copy. For example, bytes=0-9 indicates that you want to copy the first 10 bytes of the source. You can copy a range only if the source object is greater than 5 MB.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "description": "Object key for which the multipart upload was initiated.",
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "partNumber",
            "in": "query",
            "required": true,
            "description": "Part number of part being copied. This is a positive integer between 1 and 10,000.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "uploadId",
            "in": "query",
            "required": true,
            "description": "Upload ID identifying the multipart upload whose part is being copied.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-algorithm",
            "in": "header",
            "required": false,
            "description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-key",
            "in": "header",
            "required": false,
            "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header. This must be the same encryption key specified in the initiate multipart upload request.",
            "schema": {
              "type": "string",
              "format": "password"
            }
          },
          {
            "name": "x-amz-server-side-encryption-customer-key-MD5",
            "in": "header",
            "required": false,
            "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-copy-source-server-side-encryption-customer-algorithm",
            "in": "header",
            "required": false,
            "description": "Specifies the algorithm to use when decrypting the source object (for example, AES256).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-copy-source-server-side-encryption-customer-key",
            "in": "header",
            "required": false,
            "description": "Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.",
            "schema": {
              "type": "string",
              "format": "password"
            }
          },
          {
            "name": "x-amz-copy-source-server-side-encryption-customer-key-MD5",
            "in": "header",
            "required": false,
            "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-request-payer",
            "in": "header",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "requester"
              ],
              "description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>."
            }
          },
          {
            "name": "x-amz-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected destination bucket owner. If the destination bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-amz-source-expected-bucket-owner",
            "in": "header",
            "required": false,
            "description": "The account ID of the expected source bucket owner. If the source bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-amz-security-token"
        }
      ]
    }
  },
  "components": {
    "parameters": {
      "x-amz-security-token": {
        "name": "x-amz-security-token",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "hmac": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Amazon S3 signature",
        "x-amazon-apigateway-authtype": "awsS3"
      }
    },
    "schemas": {
      "AbortMultipartUploadOutput": {
        "type": "object",
        "example": {},
        "properties": {}
      },
      "NoSuchUpload": {},
      "CompleteMultipartUploadOutput": {
        "type": "object",
        "example": {
          "Bucket": "acexamplebucket",
          "ETag": "\"4d9031c7644d8081c2829f4ea23c55f7-2\"",
          "Key": "bigobject",
          "Location": "https://examplebucket.s3.<Region>.amazonaws.com/bigobject"
        },
        "properties": {
          "Location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Location"
              },
              {
                "description": "The URI that identifies the newly created object."
              }
            ]
          },
          "Bucket": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BucketName"
              },
              {
                "description": "<p>The name of the bucket that contains the newly created object. Does not return the access point ARN or access point alias if used.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>"
              }
            ]
          },
          "Key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectKey"
              },
              {
                "description": "The object key of the newly created object."
              }
            ]
          },
          "ETag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ETag"
              },
              {
                "description": "Entity tag that identifies the newly created object's data. Objects with different object data will have different entity tags. The entity tag is an opaque string. The entity tag may or may not be an MD5 digest of the object data. If the entity tag is not an MD5 digest of the object data, it will contain one or more nonhexadecimal characters and/or will consist of less than 32 or more than 32 hexadecimal digits. For more information about how the entity tag is calculated, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumCRC32": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumCRC32"
              },
              {
                "description": "The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumCRC32C": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumCRC32C"
              },
              {
                "description": "The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumSHA1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumSHA1"
              },
              {
                "description": "The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumSHA256": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumSHA256"
              },
              {
                "description": "The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          }
        }
      },
      "CompletedPartList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CompletedPart"
        },
        "xml": {
          "wrapped": false
        }
      },
      "CopyObjectOutput": {
        "type": "object",
        "example": {
          "CopyObjectResult": {
            "ETag": "\"6805f2cfc46c0f04559748bb039d69ae\"",
            "LastModified": "2016-12-15T17:38:53.000Z"
          }
        },
        "properties": {
          "CopyObjectResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CopyObjectResult"
              },
              {
                "description": "Container for all response elements."
              }
            ]
          }
        }
      },
      "MetadataValue": {
        "type": "string"
      },
      "ObjectNotInActiveTierError": {},
      "BucketLocationConstraint": {
        "type": "string",
        "enum": [
          "af-south-1",
          "ap-east-1",
          "ap-northeast-1",
          "ap-northeast-2",
          "ap-northeast-3",
          "ap-south-1",
          "ap-southeast-1",
          "ap-southeast-2",
          "ap-southeast-3",
          "ca-central-1",
          "cn-north-1",
          "cn-northwest-1",
          "EU",
          "eu-central-1",
          "eu-north-1",
          "eu-south-1",
          "eu-west-1",
          "eu-west-2",
          "eu-west-3",
          "me-south-1",
          "sa-east-1",
          "us-east-2",
          "us-gov-east-1",
          "us-gov-west-1",
          "us-west-1",
          "us-west-2"
        ]
      },
      "BucketAlreadyExists": {},
      "BucketAlreadyOwnedByYou": {},
      "CreateMultipartUploadOutput": {
        "type": "object",
        "example": {
          "Bucket": "examplebucket",
          "Key": "largeobject",
          "UploadId": "ibZBv_75gd9r8lH_gqXatLdxMVpAlj6ZQjEs.OwyF3953YdwbcQnMA2BLGn8Lx12fQNICtMw5KyteFeHw.Sjng--"
        },
        "properties": {
          "Bucket": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BucketName"
              },
              {
                "description": "<p>The name of the bucket to which the multipart upload was initiated. Does not return the access point ARN or access point alias if used.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>"
              }
            ]
          },
          "Key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectKey"
              },
              {
                "description": "Object key for which the multipart upload was initiated."
              }
            ]
          },
          "UploadId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MultipartUploadId"
              },
              {
                "description": "ID for the initiated multipart upload."
              }
            ]
          }
        }
      },
      "DeleteObjectOutput": {
        "type": "object",
        "example": {},
        "properties": {}
      },
      "DeleteObjectTaggingOutput": {
        "type": "object",
        "example": {
          "VersionId": "ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI"
        },
        "properties": {}
      },
      "DeleteObjectsOutput": {
        "type": "object",
        "example": {
          "Deleted": [
            {
              "Key": "HappyFace.jpg",
              "VersionId": "yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd"
            },
            {
              "Key": "HappyFace.jpg",
              "VersionId": "2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b"
            }
          ]
        },
        "properties": {
          "Deleted": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeletedObjects"
              },
              {
                "description": "Container element for a successful delete. It identifies the object that was successfully deleted."
              }
            ]
          },
          "Errors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Errors"
              },
              {
                "xml": {
                  "name": "Error"
                },
                "description": "Container for a failed delete action that describes the object that Amazon S3 attempted to delete and the error it encountered."
              }
            ]
          }
        }
      },
      "ObjectIdentifierList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ObjectIdentifier"
        },
        "xml": {
          "wrapped": false
        }
      },
      "Quiet": {
        "type": "boolean"
      },
      "GetBucketVersioningOutput": {
        "type": "object",
        "example": {
          "MFADelete": "Disabled",
          "Status": "Enabled"
        },
        "properties": {
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BucketVersioningStatus"
              },
              {
                "description": "The versioning state of the bucket."
              }
            ]
          }
        }
      },
      "GetObjectOutput": {
        "type": "object",
        "example": {
          "AcceptRanges": "bytes",
          "ContentLength": "10",
          "ContentRange": "bytes 0-9/43",
          "ContentType": "text/plain",
          "ETag": "\"0d94420ffd0bc68cd3d152506b97a9cc\"",
          "LastModified": "Thu, 09 Oct 2014 22:57:28 GMT",
          "Metadata": {},
          "VersionId": "null"
        },
        "properties": {
          "Body": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Body"
              },
              {
                "description": "Object data."
              }
            ]
          },
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              },
              {
                "xml": {
                  "name": "x-amz-meta-"
                },
                "description": "A map of metadata to store with the object in S3."
              }
            ]
          }
        }
      },
      "NoSuchKey": {},
      "InvalidObjectState": {},
      "GetObjectAttributesOutput": {
        "type": "object",
        "properties": {
          "ETag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ETag"
              },
              {
                "description": "An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL."
              }
            ]
          },
          "Checksum": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Checksum"
              },
              {
                "description": "The checksum or digest of the object."
              }
            ]
          },
          "ObjectParts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GetObjectAttributesParts"
              },
              {
                "description": "A collection of parts associated with a multipart upload."
              }
            ]
          },
          "StorageClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StorageClass"
              },
              {
                "description": "<p>Provides the storage class information of the object. Amazon S3 returns this header for all objects except for S3 Standard storage class objects.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html\">Storage Classes</a>.</p>"
              }
            ]
          },
          "ObjectSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectSize"
              },
              {
                "description": "The size of the object in bytes."
              }
            ]
          }
        }
      },
      "ObjectAttributes": {
        "type": "string",
        "enum": [
          "ETag",
          "Checksum",
          "ObjectParts",
          "StorageClass",
          "ObjectSize"
        ]
      },
      "GetObjectLockConfigurationOutput": {
        "type": "object",
        "properties": {
          "ObjectLockConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectLockConfiguration"
              },
              {
                "description": "The specified bucket's Object Lock configuration."
              }
            ]
          }
        }
      },
      "NoSuchBucket": {},
      "HeadObjectOutput": {
        "type": "object",
        "example": {
          "AcceptRanges": "bytes",
          "ContentLength": "3191",
          "ContentType": "image/jpeg",
          "ETag": "\"6805f2cfc46c0f04559748bb039d69ae\"",
          "LastModified": "Thu, 15 Dec 2016 01:19:41 GMT",
          "Metadata": {},
          "VersionId": "null"
        },
        "properties": {
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              },
              {
                "xml": {
                  "name": "x-amz-meta-"
                },
                "description": "A map of metadata to store with the object in S3."
              }
            ]
          }
        }
      },
      "ListBucketsOutput": {
        "type": "object",
        "example": {
          "Buckets": [
            {
              "CreationDate": "2012-02-15T21: 03: 02.000Z",
              "Name": "examplebucket"
            },
            {
              "CreationDate": "2011-07-24T19: 33: 50.000Z",
              "Name": "examplebucket2"
            },
            {
              "CreationDate": "2010-12-17T00: 56: 49.000Z",
              "Name": "examplebucket3"
            }
          ],
          "Owner": {
            "DisplayName": "own-display-name",
            "ID": "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31"
          }
        },
        "properties": {
          "Buckets": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Buckets"
              },
              {
                "description": "The list of buckets owned by the requester."
              }
            ]
          },
          "Owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Owner"
              },
              {
                "description": "The owner of the buckets listed."
              }
            ]
          }
        }
      },
      "ListMultipartUploadsOutput": {
        "type": "object",
        "example": {
          "Bucket": "acl1",
          "IsTruncated": true,
          "KeyMarker": "",
          "MaxUploads": "2",
          "NextKeyMarker": "someobjectkey",
          "NextUploadIdMarker": "examplelo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--",
          "UploadIdMarker": "",
          "Uploads": [
            {
              "Initiated": "2014-05-01T05:40:58.000Z",
              "Initiator": {
                "DisplayName": "ownder-display-name",
                "ID": "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
              },
              "Key": "JavaFile",
              "Owner": {
                "DisplayName": "mohanataws",
                "ID": "852b113e7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
              },
              "StorageClass": "STANDARD",
              "UploadId": "gZ30jIqlUa.CInXklLQtSMJITdUnoZ1Y5GACB5UckOtspm5zbDMCkPF_qkfZzMiFZ6dksmcnqxJyIBvQMG9X9Q--"
            },
            {
              "Initiated": "2014-05-01T05:41:27.000Z",
              "Initiator": {
                "DisplayName": "ownder-display-name",
                "ID": "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
              },
              "Key": "JavaFile",
              "Owner": {
                "DisplayName": "ownder-display-name",
                "ID": "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
              },
              "StorageClass": "STANDARD",
              "UploadId": "b7tZSqIlo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--"
            }
          ]
        },
        "properties": {
          "Bucket": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BucketName"
              },
              {
                "description": "The name of the bucket to which the multipart upload was initiated. Does not return the access point ARN or access point alias if used."
              }
            ]
          },
          "KeyMarker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeyMarker"
              },
              {
                "description": "The key at or after which the listing began."
              }
            ]
          },
          "UploadIdMarker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UploadIdMarker"
              },
              {
                "description": "Upload ID after which listing began."
              }
            ]
          },
          "NextKeyMarker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextKeyMarker"
              },
              {
                "description": "When a list is truncated, this element specifies the value that should be used for the key-marker request parameter in a subsequent request."
              }
            ]
          },
          "Prefix": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Prefix"
              },
              {
                "description": "When a prefix is provided in the request, this field contains the specified prefix. The result contains only keys starting with the specified prefix."
              }
            ]
          },
          "Delimiter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Delimiter"
              },
              {
                "description": "Contains the delimiter you specified in the request. If you don't specify a delimiter in your request, this element is absent from the response."
              }
            ]
          },
          "NextUploadIdMarker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextUploadIdMarker"
              },
              {
                "description": "When a list is truncated, this element specifies the value that should be used for the <code>upload-id-marker</code> request parameter in a subsequent request."
              }
            ]
          },
          "MaxUploads": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxUploads"
              },
              {
                "description": "Maximum number of multipart uploads that could have been included in the response."
              }
            ]
          },
          "IsTruncated": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IsTruncated"
              },
              {
                "description": "Indicates whether the returned list of multipart uploads is truncated. A value of true indicates that the list was truncated. The list can be truncated if the number of multipart uploads exceeds the limit allowed or specified by max uploads."
              }
            ]
          },
          "Uploads": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MultipartUploadList"
              },
              {
                "xml": {
                  "name": "Upload"
                },
                "description": "Container for elements related to a particular multipart upload. A response can contain zero or more <code>Upload</code> elements."
              }
            ]
          },
          "CommonPrefixes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommonPrefixList"
              },
              {
                "description": "If you specify a delimiter in the request, then the result returns each distinct key prefix containing the delimiter in a <code>CommonPrefixes</code> element. The distinct key prefixes are returned in the <code>Prefix</code> child element."
              }
            ]
          },
          "EncodingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EncodingType"
              },
              {
                "description": "<p>Encoding type used by Amazon S3 to encode object keys in the response.</p> <p>If you specify <code>encoding-type</code> request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:</p> <p> <code>Delimiter</code>, <code>KeyMarker</code>, <code>Prefix</code>, <code>NextKeyMarker</code>, <code>Key</code>.</p>"
              }
            ]
          }
        }
      },
      "ListObjectVersionsOutput": {
        "type": "object",
        "example": {
          "Versions": [
            {
              "ETag": "\"6805f2cfc46c0f04559748bb039d69ae\"",
              "IsLatest": true,
              "Key": "HappyFace.jpg",
              "LastModified": "2016-12-15T01:19:41.000Z",
              "Owner": {
                "DisplayName": "owner-display-name",
                "ID": "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
              },
              "Size": 3191,
              "StorageClass": "STANDARD",
              "VersionId": "null"
            },
            {
              "ETag": "\"6805f2cfc46c0f04559748bb039d69ae\"",
              "IsLatest": false,
              "Key": "HappyFace.jpg",
              "LastModified": "2016-12-13T00:58:26.000Z",
              "Owner": {
                "DisplayName": "owner-display-name",
                "ID": "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
              },
              "Size": 3191,
              "StorageClass": "STANDARD",
              "VersionId": "PHtexPGjH2y.zBgT8LmB7wwLI2mpbz.k"
            }
          ]
        },
        "properties": {
          "IsTruncated": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IsTruncated"
              },
              {
                "description": "A flag that indicates whether Amazon S3 returned all of the results that satisfied the search criteria. If your results were truncated, you can make a follow-up paginated request using the NextKeyMarker and NextVersionIdMarker response parameters as a starting place in another request to return the rest of the results."
              }
            ]
          },
          "KeyMarker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeyMarker"
              },
              {
                "description": "Marks the last key returned in a truncated response."
              }
            ]
          },
          "VersionIdMarker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VersionIdMarker"
              },
              {
                "description": "Marks the last version of the key returned in a truncated response."
              }
            ]
          },
          "NextKeyMarker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextKeyMarker"
              },
              {
                "description": "When the number of responses exceeds the value of <code>MaxKeys</code>, <code>NextKeyMarker</code> specifies the first key not returned that satisfies the search criteria. Use this value for the key-marker request parameter in a subsequent request."
              }
            ]
          },
          "NextVersionIdMarker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextVersionIdMarker"
              },
              {
                "description": "When the number of responses exceeds the value of <code>MaxKeys</code>, <code>NextVersionIdMarker</code> specifies the first object version not returned that satisfies the search criteria. Use this value for the version-id-marker request parameter in a subsequent request."
              }
            ]
          },
          "Versions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectVersionList"
              },
              {
                "xml": {
                  "name": "Version"
                },
                "description": "Container for version information."
              }
            ]
          },
          "DeleteMarkers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeleteMarkers"
              },
              {
                "xml": {
                  "name": "DeleteMarker"
                },
                "description": "Container for an object that is a delete marker."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BucketName"
              },
              {
                "description": "The bucket name."
              }
            ]
          },
          "Prefix": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Prefix"
              },
              {
                "description": "Selects objects that start with the value supplied by this parameter."
              }
            ]
          },
          "Delimiter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Delimiter"
              },
              {
                "description": "The delimiter grouping the included keys. A delimiter is a character that you specify to group keys. All keys that contain the same string between the prefix and the first occurrence of the delimiter are grouped under a single result element in <code>CommonPrefixes</code>. These groups are counted as one result against the max-keys limitation. These keys are not returned elsewhere in the response."
              }
            ]
          },
          "MaxKeys": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxKeys"
              },
              {
                "description": "Specifies the maximum number of objects to return."
              }
            ]
          },
          "CommonPrefixes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommonPrefixList"
              },
              {
                "description": "All of the keys rolled up into a common prefix count as a single return when calculating the number of returns."
              }
            ]
          },
          "EncodingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EncodingType"
              },
              {
                "description": "<p> Encoding type used by Amazon S3 to encode object key names in the XML response.</p> <p>If you specify encoding-type request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:</p> <p> <code>KeyMarker, NextKeyMarker, Prefix, Key</code>, and <code>Delimiter</code>.</p>"
              }
            ]
          }
        }
      },
      "ListObjectsOutput": {
        "type": "object",
        "example": {
          "Contents": [
            {
              "ETag": "\"70ee1738b6b21e2c8a43f3a5ab0eee71\"",
              "Key": "example1.jpg",
              "LastModified": "2014-11-21T19:40:05.000Z",
              "Owner": {
                "DisplayName": "myname",
                "ID": "12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
              },
              "Size": 11,
              "StorageClass": "STANDARD"
            },
            {
              "ETag": "\"9c8af9a76df052144598c115ef33e511\"",
              "Key": "example2.jpg",
              "LastModified": "2013-11-15T01:10:49.000Z",
              "Owner": {
                "DisplayName": "myname",
                "ID": "12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
              },
              "Size": 713193,
              "StorageClass": "STANDARD"
            }
          ],
          "NextMarker": "eyJNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyfQ=="
        },
        "properties": {
          "IsTruncated": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IsTruncated"
              },
              {
                "description": "A flag that indicates whether Amazon S3 returned all of the results that satisfied the search criteria."
              }
            ]
          },
          "Marker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Marker"
              },
              {
                "description": "Indicates where in the bucket listing begins. Marker is included in the response if it was sent with the request."
              }
            ]
          },
          "NextMarker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextMarker"
              },
              {
                "description": "When response is truncated (the IsTruncated element value in the response is true), you can use the key name in this field as marker in the subsequent request to get next set of objects. Amazon S3 lists objects in alphabetical order Note: This element is returned only if you have delimiter request parameter specified. If response does not include the NextMarker and it is truncated, you can use the value of the last Key in the response as the marker in the subsequent request to get the next set of object keys."
              }
            ]
          },
          "Contents": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectList"
              },
              {
                "description": "Metadata about each object returned."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BucketName"
              },
              {
                "description": "The bucket name."
              }
            ]
          },
          "Prefix": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Prefix"
              },
              {
                "description": "Keys that begin with the indicated prefix."
              }
            ]
          },
          "Delimiter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Delimiter"
              },
              {
                "description": "Causes keys that contain the same string between the prefix and the first occurrence of the delimiter to be rolled up into a single result element in the <code>CommonPrefixes</code> collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up result counts as only one return against the <code>MaxKeys</code> value."
              }
            ]
          },
          "MaxKeys": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxKeys"
              },
              {
                "description": "The maximum number of keys returned in the response body."
              }
            ]
          },
          "CommonPrefixes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommonPrefixList"
              },
              {
                "description": "<p>All of the keys (up to 1,000) rolled up in a common prefix count as a single return when calculating the number of returns. </p> <p>A response can contain CommonPrefixes only if you specify a delimiter.</p> <p>CommonPrefixes contains all (if there are any) keys between Prefix and the next occurrence of the string specified by the delimiter.</p> <p> CommonPrefixes lists keys that act like subdirectories in the directory specified by Prefix.</p> <p>For example, if the prefix is notes/ and the delimiter is a slash (/) as in notes/summer/july, the common prefix is notes/summer/. All of the keys that roll up into a common prefix count as a single return when calculating the number of returns.</p>"
              }
            ]
          },
          "EncodingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EncodingType"
              },
              {
                "description": "Encoding type used by Amazon S3 to encode object keys in the response."
              }
            ]
          }
        }
      },
      "ListObjectsV2Output": {
        "type": "object",
        "example": {
          "Contents": [
            {
              "ETag": "\"70ee1738b6b21e2c8a43f3a5ab0eee71\"",
              "Key": "happyface.jpg",
              "LastModified": "2014-11-21T19:40:05.000Z",
              "Size": 11,
              "StorageClass": "STANDARD"
            },
            {
              "ETag": "\"becf17f89c30367a9a44495d62ed521a-1\"",
              "Key": "test.jpg",
              "LastModified": "2014-05-02T04:51:50.000Z",
              "Size": 4192256,
              "StorageClass": "STANDARD"
            }
          ],
          "IsTruncated": true,
          "KeyCount": "2",
          "MaxKeys": "2",
          "Name": "examplebucket",
          "NextContinuationToken": "1w41l63U0xa8q7smH50vCxyTQqdxo69O3EmK28Bi5PcROI4wI/EyIJg==",
          "Prefix": ""
        },
        "properties": {
          "IsTruncated": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IsTruncated"
              },
              {
                "description": "Set to false if all of the results were returned. Set to true if more keys are available to return. If the number of results exceeds that specified by MaxKeys, all of the results might not be returned."
              }
            ]
          },
          "Contents": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectList"
              },
              {
                "description": "Metadata about each object returned."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BucketName"
              },
              {
                "description": "<p>The bucket name.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>"
              }
            ]
          },
          "Prefix": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Prefix"
              },
              {
                "description": " Keys that begin with the indicated prefix."
              }
            ]
          },
          "Delimiter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Delimiter"
              },
              {
                "description": "Causes keys that contain the same string between the prefix and the first occurrence of the delimiter to be rolled up into a single result element in the CommonPrefixes collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up result counts as only one return against the <code>MaxKeys</code> value."
              }
            ]
          },
          "MaxKeys": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxKeys"
              },
              {
                "description": "Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more."
              }
            ]
          },
          "CommonPrefixes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommonPrefixList"
              },
              {
                "description": "<p>All of the keys (up to 1,000) rolled up into a common prefix count as a single return when calculating the number of returns.</p> <p>A response can contain <code>CommonPrefixes</code> only if you specify a delimiter.</p> <p> <code>CommonPrefixes</code> contains all (if there are any) keys between <code>Prefix</code> and the next occurrence of the string specified by a delimiter.</p> <p> <code>CommonPrefixes</code> lists keys that act like subdirectories in the directory specified by <code>Prefix</code>.</p> <p>For example, if the prefix is <code>notes/</code> and the delimiter is a slash (<code>/</code>) as in <code>notes/summer/july</code>, the common prefix is <code>notes/summer/</code>. All of the keys that roll up into a common prefix count as a single return when calculating the number of returns. </p>"
              }
            ]
          },
          "EncodingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EncodingType"
              },
              {
                "description": "<p>Encoding type used by Amazon S3 to encode object key names in the XML response.</p> <p>If you specify the encoding-type request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:</p> <p> <code>Delimiter, Prefix, Key,</code> and <code>StartAfter</code>.</p>"
              }
            ]
          },
          "KeyCount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeyCount"
              },
              {
                "description": "KeyCount is the number of keys returned with this request. KeyCount will always be less than or equals to MaxKeys field. Say you ask for 50 keys, your result will include less than equals 50 keys "
              }
            ]
          },
          "ContinuationToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Token"
              },
              {
                "description": " If ContinuationToken was sent with the request, it is included in the response."
              }
            ]
          },
          "NextContinuationToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextToken"
              },
              {
                "description": " <code>NextContinuationToken</code> is sent when <code>isTruncated</code> is true, which means there are more keys in the bucket that can be listed. The next list requests to Amazon S3 can be continued with this <code>NextContinuationToken</code>. <code>NextContinuationToken</code> is obfuscated and is not a real key"
              }
            ]
          },
          "StartAfter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StartAfter"
              },
              {
                "description": "If StartAfter was sent with the request, it is included in the response."
              }
            ]
          }
        }
      },
      "ListPartsOutput": {
        "type": "object",
        "example": {
          "Initiator": {
            "DisplayName": "owner-display-name",
            "ID": "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
          },
          "Owner": {
            "DisplayName": "owner-display-name",
            "ID": "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
          },
          "Parts": [
            {
              "ETag": "\"d8c2eafd90c266e19ab9dcacc479f8af\"",
              "LastModified": "2016-12-16T00:11:42.000Z",
              "PartNumber": "1",
              "Size": 26246026
            },
            {
              "ETag": "\"d8c2eafd90c266e19ab9dcacc479f8af\"",
              "LastModified": "2016-12-16T00:15:01.000Z",
              "PartNumber": "2",
              "Size": 26246026
            }
          ],
          "StorageClass": "STANDARD"
        },
        "properties": {
          "Bucket": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BucketName"
              },
              {
                "description": "The name of the bucket to which the multipart upload was initiated. Does not return the access point ARN or access point alias if used."
              }
            ]
          },
          "Key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectKey"
              },
              {
                "description": "Object key for which the multipart upload was initiated."
              }
            ]
          },
          "UploadId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MultipartUploadId"
              },
              {
                "description": "Upload ID identifying the multipart upload whose parts are being listed."
              }
            ]
          },
          "PartNumberMarker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartNumberMarker"
              },
              {
                "description": "When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request parameter in a subsequent request."
              }
            ]
          },
          "NextPartNumberMarker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextPartNumberMarker"
              },
              {
                "description": "When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request parameter in a subsequent request."
              }
            ]
          },
          "MaxParts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxParts"
              },
              {
                "description": "Maximum number of parts that were allowed in the response."
              }
            ]
          },
          "IsTruncated": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IsTruncated"
              },
              {
                "description": " Indicates whether the returned list of parts is truncated. A true value indicates that the list was truncated. A list can be truncated if the number of parts exceeds the limit returned in the MaxParts element."
              }
            ]
          },
          "Parts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Parts"
              },
              {
                "xml": {
                  "name": "Part"
                },
                "description": " Container for elements related to a particular part. A response can contain zero or more <code>Part</code> elements."
              }
            ]
          },
          "Initiator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Initiator"
              },
              {
                "description": "Container element that identifies who initiated the multipart upload. If the initiator is an Amazon Web Services account, this element provides the same information as the <code>Owner</code> element. If the initiator is an IAM User, this element provides the user ARN and display name."
              }
            ]
          },
          "Owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Owner"
              },
              {
                "description": " Container element that identifies the object owner, after the object is created. If multipart upload is initiated by an IAM user, this element provides the parent account ID and display name."
              }
            ]
          },
          "StorageClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StorageClass"
              },
              {
                "description": "Class of storage (STANDARD or REDUCED_REDUNDANCY) used to store the uploaded object."
              }
            ]
          },
          "ChecksumAlgorithm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumAlgorithm"
              },
              {
                "description": "The algorithm that was used to create a checksum of the object."
              }
            ]
          }
        }
      },
      "Owner": {
        "type": "object",
        "properties": {
          "DisplayName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DisplayName"
              },
              {
                "description": "Container for the display name of the owner."
              }
            ]
          },
          "ID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "description": "Container for the ID of the owner."
              }
            ]
          }
        },
        "description": "Container for the owner's display name and ID."
      },
      "IsEnabled": {
        "type": "boolean"
      },
      "Role": {
        "type": "string"
      },
      "MFADelete": {
        "type": "string",
        "enum": [
          "Enabled",
          "Disabled"
        ]
      },
      "BucketVersioningStatus": {
        "type": "string",
        "enum": [
          "Enabled",
          "Suspended"
        ]
      },
      "PutObjectOutput": {
        "type": "object",
        "example": {
          "ETag": "\"6805f2cfc46c0f04559748bb039d69ae\"",
          "VersionId": "Bvq0EDKxOcXLJXNo_Lkz37eM3R4pfzyQ"
        },
        "properties": {}
      },
      "PutObjectLockConfigurationOutput": {
        "type": "object",
        "properties": {}
      },
      "ObjectLockEnabled": {
        "type": "string",
        "enum": [
          "Enabled"
        ]
      },
      "ObjectLockRule": {
        "type": "object",
        "properties": {
          "DefaultRetention": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DefaultRetention"
              },
              {
                "description": "The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket. Bucket settings require both a mode and a period. The period can be either <code>Days</code> or <code>Years</code> but you must select one. You cannot specify <code>Days</code> and <code>Years</code> at the same time."
              }
            ]
          }
        },
        "description": "The container element for an Object Lock rule."
      },
      "ObjectLockRetentionMode": {
        "type": "string",
        "enum": [
          "GOVERNANCE",
          "COMPLIANCE"
        ]
      },
      "Date": {
        "type": "string",
        "format": "date-time"
      },
      "Setting": {
        "type": "boolean"
      },
      "Days": {
        "type": "integer"
      },
      "Description": {
        "type": "string"
      },
      "SelectParameters": {
        "type": "object",
        "required": [
          "InputSerialization",
          "ExpressionType",
          "Expression",
          "OutputSerialization"
        ],
        "properties": {
          "InputSerialization": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InputSerialization"
              },
              {
                "description": "Describes the serialization format of the object."
              }
            ]
          },
          "ExpressionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExpressionType"
              },
              {
                "description": "The type of the provided expression (for example, SQL)."
              }
            ]
          },
          "Expression": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Expression"
              },
              {
                "description": "The expression that is used to query the object."
              }
            ]
          },
          "OutputSerialization": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OutputSerialization"
              },
              {
                "description": "Describes how the results of the Select job are serialized."
              }
            ]
          }
        },
        "description": "Describes the parameters for Select job types."
      },
      "EnableRequestProgress": {
        "type": "boolean"
      },
      "CSVInput": {
        "type": "object",
        "properties": {
          "FileHeaderInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileHeaderInfo"
              },
              {
                "description": "<p>Describes the first line of input. Valid values are:</p> <ul> <li> <p> <code>NONE</code>: First line is not a header.</p> </li> <li> <p> <code>IGNORE</code>: First line is a header, but you can't use the header values to indicate the column in an expression. You can use column position (such as _1, _2, …) to indicate the column (<code>SELECT s._1 FROM OBJECT s</code>).</p> </li> <li> <p> <code>Use</code>: First line is a header, and you can use the header value to identify a column in an expression (<code>SELECT \"name\" FROM OBJECT</code>). </p> </li> </ul>"
              }
            ]
          },
          "Comments": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Comments"
              },
              {
                "description": "A single character used to indicate that a row should be ignored when the character is present at the start of that row. You can specify any character to indicate a comment line."
              }
            ]
          },
          "QuoteEscapeCharacter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuoteEscapeCharacter"
              },
              {
                "description": "A single character used for escaping the quotation mark character inside an already escaped value. For example, the value <code>\"\"\" a , b \"\"\"</code> is parsed as <code>\" a , b \"</code>."
              }
            ]
          },
          "RecordDelimiter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecordDelimiter"
              },
              {
                "description": "A single character used to separate individual records in the input. Instead of the default value, you can specify an arbitrary delimiter."
              }
            ]
          },
          "FieldDelimiter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FieldDelimiter"
              },
              {
                "description": "A single character used to separate individual fields in a record. You can specify an arbitrary delimiter."
              }
            ]
          },
          "QuoteCharacter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuoteCharacter"
              },
              {
                "description": "<p>A single character used for escaping when the field delimiter is part of the value. For example, if the value is <code>a, b</code>, Amazon S3 wraps this field value in quotation marks, as follows: <code>\" a , b \"</code>.</p> <p>Type: String</p> <p>Default: <code>\"</code> </p> <p>Ancestors: <code>CSV</code> </p>"
              }
            ]
          },
          "AllowQuotedRecordDelimiter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AllowQuotedRecordDelimiter"
              },
              {
                "description": "Specifies that CSV field values may contain quoted record delimiters and such records should be allowed. Default value is FALSE. Setting this value to TRUE may lower performance."
              }
            ]
          }
        },
        "description": "Describes how an uncompressed comma-separated values (CSV)-formatted input object is formatted."
      },
      "CompressionType": {
        "type": "string",
        "enum": [
          "NONE",
          "GZIP",
          "BZIP2"
        ]
      },
      "JSONInput": {
        "type": "object",
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JSONType"
              },
              {
                "description": "The type of JSON. Valid values: Document, Lines."
              }
            ]
          }
        },
        "description": "Specifies JSON as object's input serialization format."
      },
      "ParquetInput": {
        "type": "object",
        "properties": {},
        "description": "Container for Parquet."
      },
      "CSVOutput": {
        "type": "object",
        "properties": {
          "QuoteFields": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuoteFields"
              },
              {
                "description": "<p>Indicates whether to use quotation marks around output fields. </p> <ul> <li> <p> <code>ALWAYS</code>: Always use quotation marks for output fields.</p> </li> <li> <p> <code>ASNEEDED</code>: Use quotation marks for output fields when needed.</p> </li> </ul>"
              }
            ]
          },
          "QuoteEscapeCharacter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuoteEscapeCharacter"
              },
              {
                "description": "The single character used for escaping the quote character inside an already escaped value."
              }
            ]
          },
          "RecordDelimiter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecordDelimiter"
              },
              {
                "description": "A single character used to separate individual records in the output. Instead of the default value, you can specify an arbitrary delimiter."
              }
            ]
          },
          "FieldDelimiter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FieldDelimiter"
              },
              {
                "description": "The value used to separate individual fields in a record. You can specify an arbitrary delimiter."
              }
            ]
          },
          "QuoteCharacter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuoteCharacter"
              },
              {
                "description": "A single character used for escaping when the field delimiter is part of the value. For example, if the value is <code>a, b</code>, Amazon S3 wraps this field value in quotation marks, as follows: <code>\" a , b \"</code>."
              }
            ]
          }
        },
        "description": "Describes how uncompressed comma-separated values (CSV)-formatted results are formatted."
      },
      "JSONOutput": {
        "type": "object",
        "properties": {
          "RecordDelimiter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecordDelimiter"
              },
              {
                "description": "The value used to separate individual records in the output. If no value is specified, Amazon S3 uses a newline character ('\\n')."
              }
            ]
          }
        },
        "description": "Specifies JSON as request's output serialization format."
      },
      "Start": {
        "type": "integer"
      },
      "End": {
        "type": "integer"
      },
      "UploadPartOutput": {
        "type": "object",
        "example": {
          "ETag": "\"d8c2eafd90c266e19ab9dcacc479f8af\""
        },
        "properties": {}
      },
      "UploadPartCopyOutput": {
        "type": "object",
        "example": {
          "CopyPartResult": {
            "ETag": "\"b0c6f0e7e054ab8fa2536a2677f8734d\"",
            "LastModified": "2016-12-29T21:24:43.000Z"
          }
        },
        "properties": {
          "CopyPartResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CopyPartResult"
              },
              {
                "description": "Container for all response elements."
              }
            ]
          }
        }
      },
      "BucketName": {
        "type": "string"
      },
      "ObjectKey": {
        "type": "string",
        "minLength": 1
      },
      "MultipartUploadId": {
        "type": "string"
      },
      "AccountId": {
        "type": "string"
      },
      "AcceptRanges": {
        "type": "string"
      },
      "OwnerOverride": {
        "type": "string",
        "enum": [
          "Destination"
        ]
      },
      "AllowQuotedRecordDelimiter": {
        "type": "boolean"
      },
      "AllowedHeader": {
        "type": "string"
      },
      "AllowedHeaders": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AllowedHeader"
        },
        "xml": {
          "wrapped": false
        }
      },
      "AllowedMethod": {
        "type": "string"
      },
      "AllowedMethods": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AllowedMethod"
        },
        "xml": {
          "wrapped": false
        }
      },
      "AllowedOrigin": {
        "type": "string"
      },
      "AllowedOrigins": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AllowedOrigin"
        },
        "xml": {
          "wrapped": false
        }
      },
      "Prefix": {
        "type": "string"
      },
      "Body": {
        "type": "string"
      },
      "CreationDate": {
        "type": "string",
        "format": "date-time"
      },
      "Bucket": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BucketName"
              },
              {
                "description": "The name of the bucket."
              }
            ]
          },
          "CreationDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreationDate"
              },
              {
                "description": "Date the bucket was created. This date can change when making changes to your bucket, such as editing its bucket policy."
              }
            ]
          }
        },
        "description": " In terms of implementation, a Bucket is a resource. An Amazon S3 bucket name is globally unique, and the namespace is shared by all Amazon Web Services accounts. "
      },
      "BucketKeyEnabled": {
        "type": "boolean"
      },
      "Buckets": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Bucket"
            },
            {
              "xml": {
                "name": "Bucket"
              }
            }
          ]
        }
      },
      "BytesProcessed": {
        "type": "integer"
      },
      "BytesReturned": {
        "type": "integer"
      },
      "BytesScanned": {
        "type": "integer"
      },
      "ID": {
        "type": "string"
      },
      "ExposeHeaders": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ExposeHeader"
        },
        "xml": {
          "wrapped": false
        }
      },
      "MaxAgeSeconds": {
        "type": "integer"
      },
      "FileHeaderInfo": {
        "type": "string",
        "enum": [
          "USE",
          "IGNORE",
          "NONE"
        ]
      },
      "Comments": {
        "type": "string"
      },
      "QuoteEscapeCharacter": {
        "type": "string"
      },
      "RecordDelimiter": {
        "type": "string"
      },
      "FieldDelimiter": {
        "type": "string"
      },
      "QuoteCharacter": {
        "type": "string"
      },
      "QuoteFields": {
        "type": "string",
        "enum": [
          "ALWAYS",
          "ASNEEDED"
        ]
      },
      "CacheControl": {
        "type": "string"
      },
      "ChecksumCRC32": {
        "type": "string"
      },
      "ChecksumCRC32C": {
        "type": "string"
      },
      "ChecksumSHA1": {
        "type": "string"
      },
      "ChecksumSHA256": {
        "type": "string"
      },
      "Checksum": {
        "type": "object",
        "properties": {
          "ChecksumCRC32": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumCRC32"
              },
              {
                "description": "The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumCRC32C": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumCRC32C"
              },
              {
                "description": "The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumSHA1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumSHA1"
              },
              {
                "description": "The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumSHA256": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumSHA256"
              },
              {
                "description": "The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          }
        },
        "description": "Contains all the possible checksum or digest values for an object."
      },
      "ChecksumAlgorithm": {
        "type": "string",
        "enum": [
          "CRC32",
          "CRC32C",
          "SHA1",
          "SHA256"
        ]
      },
      "ChecksumAlgorithmList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ChecksumAlgorithm"
        },
        "xml": {
          "wrapped": false
        }
      },
      "ChecksumMode": {
        "type": "string",
        "enum": [
          "ENABLED"
        ]
      },
      "Code": {
        "type": "string"
      },
      "CommonPrefix": {
        "type": "object",
        "properties": {
          "Prefix": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Prefix"
              },
              {
                "description": "Container for the specified common prefix."
              }
            ]
          }
        },
        "description": "Container for all (if there are any) keys between Prefix and the next occurrence of the string specified by a delimiter. CommonPrefixes lists keys that act like subdirectories in the directory specified by Prefix. For example, if the prefix is notes/ and the delimiter is a slash (/) as in notes/summer/july, the common prefix is notes/summer/. "
      },
      "CommonPrefixList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CommonPrefix"
        },
        "xml": {
          "wrapped": false
        }
      },
      "Location": {
        "type": "string"
      },
      "Expiration": {
        "type": "string"
      },
      "ETag": {
        "type": "string"
      },
      "ObjectVersionId": {
        "type": "string"
      },
      "CompletedMultipartUpload": {
        "type": "object",
        "properties": {
          "Parts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompletedPartList"
              },
              {
                "xml": {
                  "name": "Part"
                },
                "description": "<p>Array of CompletedPart data types.</p> <p>If you do not supply a valid <code>Part</code> with your request, the service sends back an HTTP 400 response.</p>"
              }
            ]
          }
        },
        "description": "The container for the completed multipart upload details."
      },
      "CompleteMultipartUploadRequest": {
        "type": "object",
        "title": "CompleteMultipartUploadRequest",
        "properties": {
          "MultipartUpload": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompletedMultipartUpload"
              },
              {
                "xml": {
                  "name": "CompleteMultipartUpload"
                },
                "description": "The container for the multipart upload request information."
              }
            ]
          }
        },
        "xml": {
          "namespace": "http://s3.amazonaws.com/doc/2006-03-01/"
        }
      },
      "PartNumber": {
        "type": "integer"
      },
      "CompletedPart": {
        "type": "object",
        "properties": {
          "ETag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ETag"
              },
              {
                "description": "Entity tag returned when the part was uploaded."
              }
            ]
          },
          "ChecksumCRC32": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumCRC32"
              },
              {
                "description": "The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumCRC32C": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumCRC32C"
              },
              {
                "description": "The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumSHA1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumSHA1"
              },
              {
                "description": "The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumSHA256": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumSHA256"
              },
              {
                "description": "The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "PartNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartNumber"
              },
              {
                "description": "Part number that identifies the part. This is a positive integer between 1 and 10,000."
              }
            ]
          }
        },
        "description": "Details of the parts that were uploaded."
      },
      "KeyPrefixEquals": {
        "type": "string"
      },
      "ConfirmRemoveSelfBucketAccess": {
        "type": "boolean"
      },
      "ContentDisposition": {
        "type": "string"
      },
      "ContentEncoding": {
        "type": "string"
      },
      "ContentLanguage": {
        "type": "string"
      },
      "ContentLength": {
        "type": "integer"
      },
      "ContentMD5": {
        "type": "string"
      },
      "ContentRange": {
        "type": "string"
      },
      "ContentType": {
        "type": "string"
      },
      "ContinuationEvent": {
        "type": "object",
        "properties": {},
        "description": "<p/>"
      },
      "CopyObjectResult": {
        "type": "object",
        "properties": {
          "ETag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ETag"
              },
              {
                "description": "Returns the ETag of the new object. The ETag reflects only changes to the contents of an object, not its metadata."
              }
            ]
          },
          "LastModified": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LastModified"
              },
              {
                "description": "Creation date of the object."
              }
            ]
          },
          "ChecksumCRC32": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumCRC32"
              },
              {
                "description": "The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumCRC32C": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumCRC32C"
              },
              {
                "description": "The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumSHA1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumSHA1"
              },
              {
                "description": "The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumSHA256": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumSHA256"
              },
              {
                "description": "The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          }
        },
        "description": "Container for all response elements."
      },
      "CopySourceVersionId": {
        "type": "string"
      },
      "CopySource": {
        "type": "string",
        "pattern": "\\/.+\\/.+"
      },
      "CopySourceIfMatch": {
        "type": "string"
      },
      "CopySourceIfModifiedSince": {
        "type": "string",
        "format": "date-time"
      },
      "CopySourceIfNoneMatch": {
        "type": "string"
      },
      "CopySourceIfUnmodifiedSince": {
        "type": "string",
        "format": "date-time"
      },
      "Expires": {
        "type": "string",
        "format": "date-time"
      },
      "GrantFullControl": {
        "type": "string"
      },
      "GrantRead": {
        "type": "string"
      },
      "Metadata": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/MetadataValue"
        }
      },
      "MetadataDirective": {
        "type": "string",
        "enum": [
          "COPY",
          "REPLACE"
        ]
      },
      "ObjectLockMode": {
        "type": "string",
        "enum": [
          "GOVERNANCE",
          "COMPLIANCE"
        ]
      },
      "ObjectLockRetainUntilDate": {
        "type": "string",
        "format": "date-time"
      },
      "CopyObjectRequest": {
        "type": "object",
        "title": "CopyObjectRequest",
        "properties": {
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              },
              {
                "xml": {
                  "name": "x-amz-meta-"
                },
                "description": "A map of metadata to store with the object in S3."
              }
            ]
          }
        }
      },
      "LastModified": {
        "type": "string",
        "format": "date-time"
      },
      "CopyPartResult": {
        "type": "object",
        "properties": {
          "ETag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ETag"
              },
              {
                "description": "Entity tag of the object."
              }
            ]
          },
          "LastModified": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LastModified"
              },
              {
                "description": "Date and time at which the object was uploaded."
              }
            ]
          },
          "ChecksumCRC32": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumCRC32"
              },
              {
                "description": "The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumCRC32C": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumCRC32C"
              },
              {
                "description": "The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumSHA1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumSHA1"
              },
              {
                "description": "The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumSHA256": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumSHA256"
              },
              {
                "description": "The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          }
        },
        "description": "Container for all response elements."
      },
      "CopySourceRange": {
        "type": "string"
      },
      "GrantWrite": {
        "type": "string"
      },
      "ObjectLockEnabledForBucket": {
        "type": "boolean"
      },
      "ObjectOwnership": {
        "type": "string",
        "enum": [
          "BucketOwnerPreferred",
          "ObjectWriter",
          "BucketOwnerEnforced"
        ],
        "description": "<p>The container element for object ownership for a bucket's ownership controls.</p> <p>BucketOwnerPreferred - Objects uploaded to the bucket change ownership to the bucket owner if the objects are uploaded with the <code>bucket-owner-full-control</code> canned ACL.</p> <p>ObjectWriter - The uploading account will own the object if the object is uploaded with the <code>bucket-owner-full-control</code> canned ACL.</p> <p>BucketOwnerEnforced - Access control lists (ACLs) are disabled and no longer affect permissions. The bucket owner automatically owns and has full control over every object in the bucket. The bucket only accepts PUT requests that don't specify an ACL or bucket owner full control ACLs, such as the <code>bucket-owner-full-control</code> canned ACL or an equivalent form of this ACL expressed in the XML format.</p>"
      },
      "CreateMultipartUploadRequest": {
        "type": "object",
        "title": "CreateMultipartUploadRequest",
        "properties": {
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              },
              {
                "xml": {
                  "name": "x-amz-meta-"
                },
                "description": "A map of metadata to store with the object in S3."
              }
            ]
          }
        }
      },
      "Years": {
        "type": "integer"
      },
      "DefaultRetention": {
        "type": "object",
        "properties": {
          "Mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectLockRetentionMode"
              },
              {
                "description": "The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. Must be used with either <code>Days</code> or <code>Years</code>."
              }
            ]
          },
          "Days": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Days"
              },
              {
                "description": "The number of days that you want to specify for the default retention period. Must be used with <code>Mode</code>."
              }
            ]
          },
          "Years": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Years"
              },
              {
                "description": "The number of years that you want to specify for the default retention period. Must be used with <code>Mode</code>."
              }
            ]
          }
        },
        "description": "<p>The container element for specifying the default Object Lock retention settings for new objects placed in the specified bucket.</p> <note> <ul> <li> <p>The <code>DefaultRetention</code> settings require both a mode and a period.</p> </li> <li> <p>The <code>DefaultRetention</code> period can be either <code>Days</code> or <code>Years</code> but you must select one. You cannot specify <code>Days</code> and <code>Years</code> at the same time.</p> </li> </ul> </note>"
      },
      "Delete": {
        "type": "object",
        "required": [
          "Objects"
        ],
        "properties": {
          "Objects": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectIdentifierList"
              },
              {
                "xml": {
                  "name": "Object"
                },
                "description": "The objects to delete."
              }
            ]
          },
          "Quiet": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Quiet"
              },
              {
                "description": "Element to enable quiet mode for the request. When you add this element, you must set its value to true."
              }
            ]
          }
        },
        "description": "Container for the objects to delete."
      },
      "DeleteMarker": {
        "type": "boolean"
      },
      "IsLatest": {
        "type": "boolean"
      },
      "DeleteMarkerEntry": {
        "type": "object",
        "properties": {
          "Owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Owner"
              },
              {
                "description": "The account that created the delete marker.&gt;"
              }
            ]
          },
          "Key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectKey"
              },
              {
                "description": "The object key."
              }
            ]
          },
          "VersionId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectVersionId"
              },
              {
                "description": "Version ID of an object."
              }
            ]
          },
          "IsLatest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IsLatest"
              },
              {
                "description": "Specifies whether the object is (true) or is not (false) the latest version of an object."
              }
            ]
          },
          "LastModified": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LastModified"
              },
              {
                "description": "Date and time the object was last modified."
              }
            ]
          }
        },
        "description": "Information about the delete marker."
      },
      "DeleteMarkerVersionId": {
        "type": "string"
      },
      "DeleteMarkers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DeleteMarkerEntry"
        },
        "xml": {
          "wrapped": false
        }
      },
      "DeleteObjectRequest": {
        "type": "object",
        "title": "DeleteObjectRequest",
        "properties": {}
      },
      "DeletedObjects": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DeletedObject"
        },
        "xml": {
          "wrapped": false
        }
      },
      "Errors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Error"
        },
        "xml": {
          "wrapped": false
        }
      },
      "DeleteObjectsRequest": {
        "type": "object",
        "required": [
          "Delete"
        ],
        "title": "DeleteObjectsRequest",
        "properties": {
          "Delete": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Delete"
              },
              {
                "description": "Container for the request."
              }
            ]
          }
        },
        "xml": {
          "namespace": "http://s3.amazonaws.com/doc/2006-03-01/"
        }
      },
      "DeletedObject": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectKey"
              },
              {
                "description": "The name of the deleted object."
              }
            ]
          },
          "VersionId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectVersionId"
              },
              {
                "description": "The version ID of the deleted object."
              }
            ]
          },
          "DeleteMarker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeleteMarker"
              },
              {
                "description": "Specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker. In a simple DELETE, this header indicates whether (true) or not (false) a delete marker was created."
              }
            ]
          },
          "DeleteMarkerVersionId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeleteMarkerVersionId"
              },
              {
                "description": "The version ID of the delete marker created as a result of the DELETE operation. If you delete a specific object version, the value returned by this header is the version ID of the object version deleted."
              }
            ]
          }
        },
        "description": "Information about the deleted object."
      },
      "Delimiter": {
        "type": "string"
      },
      "DisplayName": {
        "type": "string"
      },
      "EmailAddress": {
        "type": "string"
      },
      "EncodingType": {
        "type": "string",
        "enum": [
          "url"
        ],
        "description": "Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response."
      },
      "EndEvent": {
        "type": "object",
        "properties": {},
        "description": "A message that indicates the request is complete and no more messages will be sent. You should not assume that the request is complete until the client receives an <code>EndEvent</code>."
      },
      "Message": {
        "type": "string"
      },
      "Error": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectKey"
              },
              {
                "description": "The error key."
              }
            ]
          },
          "VersionId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectVersionId"
              },
              {
                "description": "The version ID of the error."
              }
            ]
          },
          "Code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Code"
              },
              {
                "description": "<p>The error code is a string that uniquely identifies an error condition. It is meant to be read and understood by programs that detect and handle errors by type. </p> <p class=\"title\"> <b>Amazon S3 error codes</b> </p> <ul> <li> <ul> <li> <p> <i>Code:</i> AccessDenied </p> </li> <li> <p> <i>Description:</i> Access Denied</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> AccountProblem</p> </li> <li> <p> <i>Description:</i> There is a problem with your Amazon Web Services account that prevents the action from completing successfully. Contact Amazon Web Services Support for further assistance.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> AllAccessDisabled</p> </li> <li> <p> <i>Description:</i> All access to this Amazon S3 resource has been disabled. Contact Amazon Web Services Support for further assistance.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> AmbiguousGrantByEmailAddress</p> </li> <li> <p> <i>Description:</i> The email address you provided is associated with more than one account.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> AuthorizationHeaderMalformed</p> </li> <li> <p> <i>Description:</i> The authorization header you provided is invalid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>HTTP Status Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> BadDigest</p> </li> <li> <p> <i>Description:</i> The Content-MD5 you specified did not match what we received.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> BucketAlreadyExists</p> </li> <li> <p> <i>Description:</i> The requested bucket name is not available. The bucket namespace is shared by all users of the system. Please select a different name and try again.</p> </li> <li> <p> <i>HTTP Status Code:</i> 409 Conflict</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> BucketAlreadyOwnedByYou</p> </li> <li> <p> <i>Description:</i> The bucket you tried to create already exists, and you own it. Amazon S3 returns this error in all Amazon Web Services Regions except in the North Virginia Region. For legacy compatibility, if you re-create an existing bucket that you already own in the North Virginia Region, Amazon S3 returns 200 OK and resets the bucket access control lists (ACLs).</p> </li> <li> <p> <i>Code:</i> 409 Conflict (in all Regions except the North Virginia Region) </p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> BucketNotEmpty</p> </li> <li> <p> <i>Description:</i> The bucket you tried to delete is not empty.</p> </li> <li> <p> <i>HTTP Status Code:</i> 409 Conflict</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> CredentialsNotSupported</p> </li> <li> <p> <i>Description:</i> This request does not support credentials.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> CrossLocationLoggingProhibited</p> </li> <li> <p> <i>Description:</i> Cross-location logging not allowed. Buckets in one geographic location cannot log information to a bucket in another location.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> EntityTooSmall</p> </li> <li> <p> <i>Description:</i> Your proposed upload is smaller than the minimum allowed object size.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> EntityTooLarge</p> </li> <li> <p> <i>Description:</i> Your proposed upload exceeds the maximum allowed object size.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> ExpiredToken</p> </li> <li> <p> <i>Description:</i> The provided token has expired.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> IllegalVersioningConfigurationException </p> </li> <li> <p> <i>Description:</i> Indicates that the versioning configuration specified in the request is invalid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> IncompleteBody</p> </li> <li> <p> <i>Description:</i> You did not provide the number of bytes specified by the Content-Length HTTP header</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> IncorrectNumberOfFilesInPostRequest</p> </li> <li> <p> <i>Description:</i> POST requires exactly one file upload per request.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InlineDataTooLarge</p> </li> <li> <p> <i>Description:</i> Inline data exceeds the maximum allowed size.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InternalError</p> </li> <li> <p> <i>Description:</i> We encountered an internal error. Please try again.</p> </li> <li> <p> <i>HTTP Status Code:</i> 500 Internal Server Error</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Server</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidAccessKeyId</p> </li> <li> <p> <i>Description:</i> The Amazon Web Services access key ID you provided does not exist in our records.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidAddressingHeader</p> </li> <li> <p> <i>Description:</i> You must specify the Anonymous role.</p> </li> <li> <p> <i>HTTP Status Code:</i> N/A</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidArgument</p> </li> <li> <p> <i>Description:</i> Invalid Argument</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidBucketName</p> </li> <li> <p> <i>Description:</i> The specified bucket is not valid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidBucketState</p> </li> <li> <p> <i>Description:</i> The request is not valid with the current state of the bucket.</p> </li> <li> <p> <i>HTTP Status Code:</i> 409 Conflict</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidDigest</p> </li> <li> <p> <i>Description:</i> The Content-MD5 you specified is not valid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidEncryptionAlgorithmError</p> </li> <li> <p> <i>Description:</i> The encryption request you specified is not valid. The valid value is AES256.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidLocationConstraint</p> </li> <li> <p> <i>Description:</i> The specified location constraint is not valid. For more information about Regions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro\">How to Select a Region for Your Buckets</a>. </p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidObjectState</p> </li> <li> <p> <i>Description:</i> The action is not valid for the current state of the object.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidPart</p> </li> <li> <p> <i>Description:</i> One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidPartOrder</p> </li> <li> <p> <i>Description:</i> The list of parts was not in ascending order. Parts list must be specified in order by part number.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidPayer</p> </li> <li> <p> <i>Description:</i> All access to this object has been disabled. Please contact Amazon Web Services Support for further assistance.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidPolicyDocument</p> </li> <li> <p> <i>Description:</i> The content of the form does not meet the conditions specified in the policy document.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRange</p> </li> <li> <p> <i>Description:</i> The requested range cannot be satisfied.</p> </li> <li> <p> <i>HTTP Status Code:</i> 416 Requested Range Not Satisfiable</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Please use <code>AWS4-HMAC-SHA256</code>.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> SOAP requests must be made over an HTTPS connection.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Amazon S3 Transfer Acceleration is not supported for buckets with non-DNS compliant names.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Amazon S3 Transfer Acceleration is not supported for buckets with periods (.) in their names.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Amazon S3 Transfer Accelerate endpoint only supports virtual style requests.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Amazon S3 Transfer Accelerate is not configured on this bucket.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Amazon S3 Transfer Accelerate is disabled on this bucket.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Amazon S3 Transfer Acceleration is not supported on this bucket. Contact Amazon Web Services Support for more information.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i> Amazon S3 Transfer Acceleration cannot be enabled on this bucket. Contact Amazon Web Services Support for more information.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidSecurity</p> </li> <li> <p> <i>Description:</i> The provided security credentials are not valid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidSOAPRequest</p> </li> <li> <p> <i>Description:</i> The SOAP request body is invalid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidStorageClass</p> </li> <li> <p> <i>Description:</i> The storage class you specified is not valid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidTargetBucketForLogging</p> </li> <li> <p> <i>Description:</i> The target bucket for logging does not exist, is not owned by you, or does not have the appropriate grants for the log-delivery group. </p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidToken</p> </li> <li> <p> <i>Description:</i> The provided token is malformed or otherwise invalid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidURI</p> </li> <li> <p> <i>Description:</i> Couldn't parse the specified URI.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> KeyTooLongError</p> </li> <li> <p> <i>Description:</i> Your key is too long.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MalformedACLError</p> </li> <li> <p> <i>Description:</i> The XML you provided was not well-formed or did not validate against our published schema.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MalformedPOSTRequest </p> </li> <li> <p> <i>Description:</i> The body of your POST request is not well-formed multipart/form-data.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MalformedXML</p> </li> <li> <p> <i>Description:</i> This happens when the user sends malformed XML (XML that doesn't conform to the published XSD) for the configuration. The error message is, \"The XML you provided was not well-formed or did not validate against our published schema.\" </p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MaxMessageLengthExceeded</p> </li> <li> <p> <i>Description:</i> Your request was too big.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MaxPostPreDataLengthExceededError</p> </li> <li> <p> <i>Description:</i> Your POST request fields preceding the upload file were too large.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MetadataTooLarge</p> </li> <li> <p> <i>Description:</i> Your metadata headers exceed the maximum allowed metadata size.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MethodNotAllowed</p> </li> <li> <p> <i>Description:</i> The specified method is not allowed against this resource.</p> </li> <li> <p> <i>HTTP Status Code:</i> 405 Method Not Allowed</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MissingAttachment</p> </li> <li> <p> <i>Description:</i> A SOAP attachment was expected, but none were found.</p> </li> <li> <p> <i>HTTP Status Code:</i> N/A</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MissingContentLength</p> </li> <li> <p> <i>Description:</i> You must provide the Content-Length HTTP header.</p> </li> <li> <p> <i>HTTP Status Code:</i> 411 Length Required</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MissingRequestBodyError</p> </li> <li> <p> <i>Description:</i> This happens when the user sends an empty XML document as a request. The error message is, \"Request body is empty.\" </p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MissingSecurityElement</p> </li> <li> <p> <i>Description:</i> The SOAP 1.1 request is missing a security element.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MissingSecurityHeader</p> </li> <li> <p> <i>Description:</i> Your request is missing a required header.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoLoggingStatusForKey</p> </li> <li> <p> <i>Description:</i> There is no such thing as a logging status subresource for a key.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchBucket</p> </li> <li> <p> <i>Description:</i> The specified bucket does not exist.</p> </li> <li> <p> <i>HTTP Status Code:</i> 404 Not Found</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchBucketPolicy</p> </li> <li> <p> <i>Description:</i> The specified bucket does not have a bucket policy.</p> </li> <li> <p> <i>HTTP Status Code:</i> 404 Not Found</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchKey</p> </li> <li> <p> <i>Description:</i> The specified key does not exist.</p> </li> <li> <p> <i>HTTP Status Code:</i> 404 Not Found</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchLifecycleConfiguration</p> </li> <li> <p> <i>Description:</i> The lifecycle configuration does not exist. </p> </li> <li> <p> <i>HTTP Status Code:</i> 404 Not Found</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchUpload</p> </li> <li> <p> <i>Description:</i> The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</p> </li> <li> <p> <i>HTTP Status Code:</i> 404 Not Found</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchVersion </p> </li> <li> <p> <i>Description:</i> Indicates that the version ID specified in the request does not match an existing version.</p> </li> <li> <p> <i>HTTP Status Code:</i> 404 Not Found</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NotImplemented</p> </li> <li> <p> <i>Description:</i> A header you provided implies functionality that is not implemented.</p> </li> <li> <p> <i>HTTP Status Code:</i> 501 Not Implemented</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Server</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NotSignedUp</p> </li> <li> <p> <i>Description:</i> Your account is not signed up for the Amazon S3 service. You must sign up before you can use Amazon S3. You can sign up at the following URL: <a href=\"http://aws.amazon.com/s3\">Amazon S3</a> </p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> OperationAborted</p> </li> <li> <p> <i>Description:</i> A conflicting conditional action is currently in progress against this resource. Try again.</p> </li> <li> <p> <i>HTTP Status Code:</i> 409 Conflict</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> PermanentRedirect</p> </li> <li> <p> <i>Description:</i> The bucket you are attempting to access must be addressed using the specified endpoint. Send all future requests to this endpoint.</p> </li> <li> <p> <i>HTTP Status Code:</i> 301 Moved Permanently</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> PreconditionFailed</p> </li> <li> <p> <i>Description:</i> At least one of the preconditions you specified did not hold.</p> </li> <li> <p> <i>HTTP Status Code:</i> 412 Precondition Failed</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> Redirect</p> </li> <li> <p> <i>Description:</i> Temporary redirect.</p> </li> <li> <p> <i>HTTP Status Code:</i> 307 Moved Temporarily</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> RestoreAlreadyInProgress</p> </li> <li> <p> <i>Description:</i> Object restore is already in progress.</p> </li> <li> <p> <i>HTTP Status Code:</i> 409 Conflict</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> RequestIsNotMultiPartContent</p> </li> <li> <p> <i>Description:</i> Bucket POST must be of the enclosure-type multipart/form-data.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> RequestTimeout</p> </li> <li> <p> <i>Description:</i> Your socket connection to the server was not read from or written to within the timeout period.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> RequestTimeTooSkewed</p> </li> <li> <p> <i>Description:</i> The difference between the request time and the server's time is too large.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> RequestTorrentOfBucketError</p> </li> <li> <p> <i>Description:</i> Requesting the torrent file of a bucket is not permitted.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> SignatureDoesNotMatch</p> </li> <li> <p> <i>Description:</i> The request signature we calculated does not match the signature you provided. Check your Amazon Web Services secret access key and signing method. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html\">REST Authentication</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/SOAPAuthentication.html\">SOAP Authentication</a> for details.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> ServiceUnavailable</p> </li> <li> <p> <i>Description:</i> Reduce your request rate.</p> </li> <li> <p> <i>HTTP Status Code:</i> 503 Service Unavailable</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Server</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> SlowDown</p> </li> <li> <p> <i>Description:</i> Reduce your request rate.</p> </li> <li> <p> <i>HTTP Status Code:</i> 503 Slow Down</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Server</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> TemporaryRedirect</p> </li> <li> <p> <i>Description:</i> You are being redirected to the bucket while DNS updates.</p> </li> <li> <p> <i>HTTP Status Code:</i> 307 Moved Temporarily</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> TokenRefreshRequired</p> </li> <li> <p> <i>Description:</i> The provided token must be refreshed.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> TooManyBuckets</p> </li> <li> <p> <i>Description:</i> You have attempted to create more buckets than allowed.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> UnexpectedContent</p> </li> <li> <p> <i>Description:</i> This request does not support content.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> UnresolvableGrantByEmailAddress</p> </li> <li> <p> <i>Description:</i> The email address you provided does not match any account on record.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> UserKeyMustBeSpecified</p> </li> <li> <p> <i>Description:</i> The bucket POST must contain the specified field name. If it is specified, check the order of the fields.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> </ul> <p/>"
              }
            ]
          },
          "Message": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Message"
              },
              {
                "description": "The error message contains a generic description of the error condition in English. It is intended for a human audience. Simple programs display the message directly to the end user if they encounter an error condition they don't know how or don't care to handle. Sophisticated programs with more exhaustive error handling and proper internationalization are more likely to ignore the error message."
              }
            ]
          }
        },
        "description": "Container for all error elements."
      },
      "ErrorCode": {
        "type": "string"
      },
      "ErrorMessage": {
        "type": "string"
      },
      "ExpirationStatus": {
        "type": "string",
        "enum": [
          "Enabled",
          "Disabled"
        ]
      },
      "ExpiredObjectDeleteMarker": {
        "type": "boolean"
      },
      "ExposeHeader": {
        "type": "string"
      },
      "Expression": {
        "type": "string"
      },
      "ExpressionType": {
        "type": "string",
        "enum": [
          "SQL"
        ]
      },
      "FetchOwner": {
        "type": "boolean"
      },
      "FilterRuleName": {
        "type": "string",
        "enum": [
          "prefix",
          "suffix"
        ]
      },
      "FilterRuleValue": {
        "type": "string"
      },
      "FilterRule": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterRuleName"
              },
              {
                "description": "The object key name prefix or suffix identifying one or more objects to which the filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and suffixes are not supported. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\">Configuring Event Notifications</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterRuleValue"
              },
              {
                "description": "The value that the filter searches for in object key names."
              }
            ]
          }
        },
        "description": "Specifies the Amazon S3 object key name to filter on and whether to filter on the suffix or prefix of the key name."
      },
      "FilterRuleList": {
        "type": "array",
        "description": "A list of containers for the key-value pair that defines the criteria for the filter rule.",
        "items": {
          "$ref": "#/components/schemas/FilterRule"
        },
        "xml": {
          "wrapped": false
        }
      },
      "GetBucketLocationRequest": {
        "type": "object",
        "title": "GetBucketLocationRequest",
        "properties": {}
      },
      "GetBucketVersioningRequest": {
        "type": "object",
        "title": "GetBucketVersioningRequest",
        "properties": {}
      },
      "GetObjectAttributesParts": {
        "type": "object",
        "properties": {
          "TotalPartsCount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartsCount"
              },
              {
                "xml": {
                  "name": "PartsCount"
                },
                "description": "The total number of parts."
              }
            ]
          },
          "PartNumberMarker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartNumberMarker"
              },
              {
                "description": "The marker for the current part."
              }
            ]
          },
          "NextPartNumberMarker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextPartNumberMarker"
              },
              {
                "description": "When a list is truncated, this element specifies the last part in the list, as well as the value to use for the <code>PartNumberMarker</code> request parameter in a subsequent request."
              }
            ]
          },
          "MaxParts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxParts"
              },
              {
                "description": "The maximum number of parts allowed in the response."
              }
            ]
          },
          "IsTruncated": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IsTruncated"
              },
              {
                "description": "Indicates whether the returned list of parts is truncated. A value of <code>true</code> indicates that the list was truncated. A list can be truncated if the number of parts exceeds the limit returned in the <code>MaxParts</code> element."
              }
            ]
          },
          "Parts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartsList"
              },
              {
                "xml": {
                  "name": "Part"
                },
                "description": "A container for elements related to a particular part. A response can contain zero or more <code>Parts</code> elements."
              }
            ]
          }
        },
        "description": "A collection of parts associated with a multipart upload."
      },
      "ObjectSize": {
        "type": "integer"
      },
      "PartsCount": {
        "type": "integer"
      },
      "PartNumberMarker": {
        "type": "integer"
      },
      "NextPartNumberMarker": {
        "type": "integer"
      },
      "MaxParts": {
        "type": "integer"
      },
      "IsTruncated": {
        "type": "boolean"
      },
      "PartsList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ObjectPart"
        },
        "xml": {
          "wrapped": false
        }
      },
      "ObjectAttributesList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ObjectAttributes"
        }
      },
      "GetObjectAttributesRequest": {
        "type": "object",
        "title": "GetObjectAttributesRequest",
        "properties": {}
      },
      "ObjectLockConfiguration": {
        "type": "object",
        "properties": {
          "ObjectLockEnabled": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectLockEnabled"
              },
              {
                "description": "Indicates whether this bucket has an Object Lock configuration enabled. Enable <code>ObjectLockEnabled</code> when you apply <code>ObjectLockConfiguration</code> to a bucket. "
              }
            ]
          },
          "Rule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectLockRule"
              },
              {
                "description": "Specifies the Object Lock rule for the specified object. Enable the this rule when you apply <code>ObjectLockConfiguration</code> to a bucket. Bucket settings require both a mode and a period. The period can be either <code>Days</code> or <code>Years</code> but you must select one. You cannot specify <code>Days</code> and <code>Years</code> at the same time."
              }
            ]
          }
        },
        "description": "The container element for Object Lock configuration parameters."
      },
      "GetObjectLockConfigurationRequest": {
        "type": "object",
        "title": "GetObjectLockConfigurationRequest",
        "properties": {}
      },
      "MissingMeta": {
        "type": "integer"
      },
      "IfMatch": {
        "type": "string"
      },
      "IfModifiedSince": {
        "type": "string",
        "format": "date-time"
      },
      "IfNoneMatch": {
        "type": "string"
      },
      "IfUnmodifiedSince": {
        "type": "string",
        "format": "date-time"
      },
      "Range": {
        "type": "string"
      },
      "ResponseCacheControl": {
        "type": "string"
      },
      "ResponseContentDisposition": {
        "type": "string"
      },
      "ResponseContentEncoding": {
        "type": "string"
      },
      "ResponseContentLanguage": {
        "type": "string"
      },
      "ResponseContentType": {
        "type": "string"
      },
      "ResponseExpires": {
        "type": "string",
        "format": "date-time"
      },
      "GetObjectRequest": {
        "type": "object",
        "title": "GetObjectRequest",
        "properties": {}
      },
      "GetObjectResponseStatusCode": {
        "type": "integer"
      },
      "ObjectLockRetention": {
        "type": "object",
        "properties": {
          "Mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectLockRetentionMode"
              },
              {
                "description": "Indicates the Retention mode for the specified object."
              }
            ]
          },
          "RetainUntilDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Date"
              },
              {
                "description": "The date on which this Object Lock Retention will expire."
              }
            ]
          }
        },
        "description": "A Retention configuration for an object."
      },
      "Type": {
        "type": "string",
        "enum": [
          "CanonicalUser",
          "AmazonCustomerByEmail",
          "Group"
        ]
      },
      "URI": {
        "type": "string"
      },
      "HeadBucketRequest": {
        "type": "object",
        "title": "HeadBucketRequest",
        "properties": {}
      },
      "HeadObjectRequest": {
        "type": "object",
        "title": "HeadObjectRequest",
        "properties": {}
      },
      "HostName": {
        "type": "string"
      },
      "HttpRedirectCode": {
        "type": "string"
      },
      "Suffix": {
        "type": "string"
      },
      "Initiated": {
        "type": "string",
        "format": "date-time"
      },
      "Initiator": {
        "type": "object",
        "properties": {
          "ID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "description": "If the principal is an Amazon Web Services account, it provides the Canonical User ID. If the principal is an IAM User, it provides a user ARN value."
              }
            ]
          },
          "DisplayName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DisplayName"
              },
              {
                "description": "Name of the Principal."
              }
            ]
          }
        },
        "description": "Container element that identifies who initiated the multipart upload. "
      },
      "InputSerialization": {
        "type": "object",
        "properties": {
          "CSV": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CSVInput"
              },
              {
                "description": "Describes the serialization of a CSV-encoded object."
              }
            ]
          },
          "CompressionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompressionType"
              },
              {
                "description": "Specifies object's compression format. Valid values: NONE, GZIP, BZIP2. Default Value: NONE."
              }
            ]
          },
          "JSON": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JSONInput"
              },
              {
                "description": "Specifies JSON as object's input serialization format."
              }
            ]
          },
          "Parquet": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ParquetInput"
              },
              {
                "description": "Specifies Parquet as object's input serialization format."
              }
            ]
          }
        },
        "description": "Describes the serialization format of the object."
      },
      "JSONType": {
        "type": "string",
        "enum": [
          "DOCUMENT",
          "LINES"
        ]
      },
      "KeyCount": {
        "type": "integer"
      },
      "KeyMarker": {
        "type": "string"
      },
      "ObjectSizeGreaterThanBytes": {
        "type": "integer"
      },
      "ObjectSizeLessThanBytes": {
        "type": "integer"
      },
      "Token": {
        "type": "string"
      },
      "NextToken": {
        "type": "string"
      },
      "UploadIdMarker": {
        "type": "string"
      },
      "NextKeyMarker": {
        "type": "string"
      },
      "NextUploadIdMarker": {
        "type": "string"
      },
      "MaxUploads": {
        "type": "integer"
      },
      "MultipartUploadList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MultipartUpload"
        },
        "xml": {
          "wrapped": false
        }
      },
      "ListMultipartUploadsRequest": {
        "type": "object",
        "title": "ListMultipartUploadsRequest",
        "properties": {}
      },
      "VersionIdMarker": {
        "type": "string"
      },
      "NextVersionIdMarker": {
        "type": "string"
      },
      "ObjectVersionList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ObjectVersion"
        },
        "xml": {
          "wrapped": false
        }
      },
      "MaxKeys": {
        "type": "integer"
      },
      "ListObjectVersionsRequest": {
        "type": "object",
        "title": "ListObjectVersionsRequest",
        "properties": {}
      },
      "Marker": {
        "type": "string"
      },
      "NextMarker": {
        "type": "string"
      },
      "ObjectList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Object"
        },
        "xml": {
          "wrapped": false
        }
      },
      "ListObjectsRequest": {
        "type": "object",
        "title": "ListObjectsRequest",
        "properties": {}
      },
      "StartAfter": {
        "type": "string"
      },
      "ListObjectsV2Request": {
        "type": "object",
        "title": "ListObjectsV2Request",
        "properties": {}
      },
      "Parts": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Part"
        },
        "xml": {
          "wrapped": false
        }
      },
      "ListPartsRequest": {
        "type": "object",
        "title": "ListPartsRequest",
        "properties": {}
      },
      "LocationPrefix": {
        "type": "string"
      },
      "TargetPrefix": {
        "type": "string"
      },
      "MetadataKey": {
        "type": "string"
      },
      "MetadataEntry": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetadataKey"
              },
              {
                "description": "Name of the Object."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetadataValue"
              },
              {
                "description": "Value of the Object."
              }
            ]
          }
        },
        "description": "A metadata key-value pair to store with an object."
      },
      "Minutes": {
        "type": "integer"
      },
      "MultipartUpload": {
        "type": "object",
        "properties": {
          "UploadId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MultipartUploadId"
              },
              {
                "description": "Upload ID that identifies the multipart upload."
              }
            ]
          },
          "Key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectKey"
              },
              {
                "description": "Key of the object for which the multipart upload was initiated."
              }
            ]
          },
          "Initiated": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Initiated"
              },
              {
                "description": "Date and time at which the multipart upload was initiated."
              }
            ]
          },
          "StorageClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StorageClass"
              },
              {
                "description": "The class of storage used to store the object."
              }
            ]
          },
          "Owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Owner"
              },
              {
                "description": "Specifies the owner of the object that is part of the multipart upload. "
              }
            ]
          },
          "Initiator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Initiator"
              },
              {
                "description": "Identifies who initiated the multipart upload."
              }
            ]
          },
          "ChecksumAlgorithm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumAlgorithm"
              },
              {
                "description": "The algorithm that was used to create a checksum of the object."
              }
            ]
          }
        },
        "description": "Container for the <code>MultipartUpload</code> for the Amazon S3 object."
      },
      "VersionCount": {
        "type": "integer"
      },
      "TransitionStorageClass": {
        "type": "string",
        "enum": [
          "GLACIER",
          "STANDARD_IA",
          "ONEZONE_IA",
          "INTELLIGENT_TIERING",
          "DEEP_ARCHIVE",
          "GLACIER_IR"
        ]
      },
      "S3KeyFilter": {
        "type": "object",
        "properties": {
          "FilterRules": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterRuleList"
              },
              {
                "xml": {
                  "name": "FilterRule"
                }
              }
            ]
          }
        },
        "description": "A container for object key name prefix and suffix filtering rules."
      },
      "Size": {
        "type": "integer"
      },
      "Object": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectKey"
              },
              {
                "description": "The name that you assign to an object. You use the object key to retrieve the object."
              }
            ]
          },
          "LastModified": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LastModified"
              },
              {
                "description": "Creation date of the object."
              }
            ]
          },
          "ETag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ETag"
              },
              {
                "description": "<p>The entity tag is a hash of the object. The ETag reflects changes only to the contents of an object, not its metadata. The ETag may or may not be an MD5 digest of the object data. Whether or not it is depends on how the object was created and how it is encrypted as described below:</p> <ul> <li> <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the Amazon Web Services Management Console, and are encrypted by SSE-S3 or plaintext, have ETags that are an MD5 digest of their object data.</p> </li> <li> <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the Amazon Web Services Management Console, and are encrypted by SSE-C or SSE-KMS, have ETags that are not an MD5 digest of their object data.</p> </li> <li> <p>If an object is created by either the Multipart Upload or Part Copy operation, the ETag is not an MD5 digest, regardless of the method of encryption. If an object is larger than 16 MB, the Amazon Web Services Management Console will upload or copy that object as a Multipart Upload, and therefore the ETag will not be an MD5 digest.</p> </li> </ul>"
              }
            ]
          },
          "ChecksumAlgorithm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumAlgorithmList"
              },
              {
                "description": "The algorithm that was used to create a checksum of the object."
              }
            ]
          },
          "Size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Size"
              },
              {
                "description": "Size in bytes of the object"
              }
            ]
          },
          "StorageClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectStorageClass"
              },
              {
                "description": "The class of storage used to store the object."
              }
            ]
          },
          "Owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Owner"
              },
              {
                "description": "The owner of the object"
              }
            ]
          }
        },
        "description": "An object consists of data and its descriptive metadata."
      },
      "ObjectIdentifier": {
        "type": "object",
        "required": [
          "Key"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectKey"
              },
              {
                "description": "<p>Key name of the object.</p> <important> <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints\"> XML related object key constraints</a>.</p> </important>"
              }
            ]
          },
          "VersionId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectVersionId"
              },
              {
                "description": "VersionId for the specific version of the object to delete."
              }
            ]
          }
        },
        "description": "Object Identifier is unique value to identify objects."
      },
      "ObjectLockToken": {
        "type": "string"
      },
      "ObjectPart": {
        "type": "object",
        "properties": {
          "PartNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartNumber"
              },
              {
                "description": "The part number identifying the part. This value is a positive integer between 1 and 10,000."
              }
            ]
          },
          "Size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Size"
              },
              {
                "description": "The size of the uploaded part in bytes."
              }
            ]
          },
          "ChecksumCRC32": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumCRC32"
              },
              {
                "description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumCRC32C": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumCRC32C"
              },
              {
                "description": "The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumSHA1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumSHA1"
              },
              {
                "description": "The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumSHA256": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumSHA256"
              },
              {
                "description": "The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          }
        },
        "description": "A container for elements related to an individual part."
      },
      "ObjectVersionStorageClass": {
        "type": "string",
        "enum": [
          "STANDARD"
        ]
      },
      "ObjectVersion": {
        "type": "object",
        "properties": {
          "ETag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ETag"
              },
              {
                "description": "The entity tag is an MD5 hash of that version of the object."
              }
            ]
          },
          "ChecksumAlgorithm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumAlgorithmList"
              },
              {
                "description": "The algorithm that was used to create a checksum of the object."
              }
            ]
          },
          "Size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Size"
              },
              {
                "description": "Size in bytes of the object."
              }
            ]
          },
          "StorageClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectVersionStorageClass"
              },
              {
                "description": "The class of storage used to store the object."
              }
            ]
          },
          "Key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectKey"
              },
              {
                "description": "The object key."
              }
            ]
          },
          "VersionId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectVersionId"
              },
              {
                "description": "Version ID of an object."
              }
            ]
          },
          "IsLatest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IsLatest"
              },
              {
                "description": "Specifies whether the object is (true) or is not (false) the latest version of an object."
              }
            ]
          },
          "LastModified": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LastModified"
              },
              {
                "description": "Date and time the object was last modified."
              }
            ]
          },
          "Owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Owner"
              },
              {
                "description": "Specifies the owner of the object."
              }
            ]
          }
        },
        "description": "The version of an object."
      },
      "OutputSerialization": {
        "type": "object",
        "properties": {
          "CSV": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CSVOutput"
              },
              {
                "description": "Describes the serialization of CSV-encoded Select results."
              }
            ]
          },
          "JSON": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JSONOutput"
              },
              {
                "description": "Specifies JSON as request's output serialization format."
              }
            ]
          }
        },
        "description": "Describes how results of the Select job are serialized."
      },
      "Part": {
        "type": "object",
        "properties": {
          "PartNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartNumber"
              },
              {
                "description": "Part number identifying the part. This is a positive integer between 1 and 10,000."
              }
            ]
          },
          "LastModified": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LastModified"
              },
              {
                "description": "Date and time at which the part was uploaded."
              }
            ]
          },
          "ETag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ETag"
              },
              {
                "description": "Entity tag returned when the part was uploaded."
              }
            ]
          },
          "Size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Size"
              },
              {
                "description": "Size in bytes of the uploaded part data."
              }
            ]
          },
          "ChecksumCRC32": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumCRC32"
              },
              {
                "description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumCRC32C": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumCRC32C"
              },
              {
                "description": "The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumSHA1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumSHA1"
              },
              {
                "description": "The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          },
          "ChecksumSHA256": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChecksumSHA256"
              },
              {
                "description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          }
        },
        "description": "Container for elements related to a part."
      },
      "Priority": {
        "type": "integer"
      },
      "Protocol": {
        "type": "string",
        "enum": [
          "http",
          "https"
        ]
      },
      "SkipValidation": {
        "type": "boolean"
      },
      "VersioningConfiguration": {
        "type": "object",
        "properties": {
          "MFADelete": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MFADelete"
              },
              {
                "xml": {
                  "name": "MfaDelete"
                },
                "description": "Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BucketVersioningStatus"
              },
              {
                "description": "The versioning state of the bucket."
              }
            ]
          }
        },
        "description": "Describes the versioning state of an Amazon S3 bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html\">PUT Bucket versioning</a> in the <i>Amazon S3 API Reference</i>."
      },
      "PutBucketVersioningRequest": {
        "type": "object",
        "required": [
          "VersioningConfiguration"
        ],
        "title": "PutBucketVersioningRequest",
        "properties": {
          "VersioningConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VersioningConfiguration"
              },
              {
                "description": "Container for setting the versioning state."
              }
            ]
          }
        },
        "xml": {
          "namespace": "http://s3.amazonaws.com/doc/2006-03-01/"
        }
      },
      "PutObjectRequest": {
        "type": "object",
        "title": "PutObjectRequest",
        "properties": {
          "Body": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Body"
              },
              {
                "description": "Object data."
              }
            ]
          },
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              },
              {
                "xml": {
                  "name": "x-amz-meta-"
                },
                "description": "A map of metadata to store with the object in S3."
              }
            ]
          }
        }
      },
      "ReplaceKeyPrefixWith": {
        "type": "string"
      },
      "ReplaceKeyWith": {
        "type": "string"
      },
      "UserMetadata": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            {
              "xml": {
                "name": "MetadataEntry"
              }
            }
          ]
        }
      },
      "ScanRange": {
        "type": "object",
        "properties": {
          "Start": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Start"
              },
              {
                "description": "Specifies the start of the byte range. This parameter is optional. Valid values: non-negative integers. The default value is 0. If only <code>start</code> is supplied, it means scan from that point to the end of the file. For example, <code>&lt;scanrange&gt;&lt;start&gt;50&lt;/start&gt;&lt;/scanrange&gt;</code> means scan from byte 50 until the end of the file."
              }
            ]
          },
          "End": {
            "allOf": [
              {
                "$ref": "#/components/schemas/End"
              },
              {
                "description": "Specifies the end of the byte range. This parameter is optional. Valid values: non-negative integers. The default value is one less than the size of the object being queried. If only the End parameter is supplied, it is interpreted to mean scan the last N bytes of the file. For example, <code>&lt;scanrange&gt;&lt;end&gt;50&lt;/end&gt;&lt;/scanrange&gt;</code> means scan the last 50 bytes."
              }
            ]
          }
        },
        "description": "Specifies the byte range of the object to get the records from. A record is processed when its first byte is contained by the range. This parameter is optional, but when specified, it must not be empty. See RFC 2616, Section 14.35.1 about how to specify the start and end of the range."
      },
      "StatsEvent": {
        "type": "object",
        "properties": {
          "Details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Stats"
              },
              {
                "description": "The Stats event details."
              }
            ]
          }
        },
        "description": "Container for the Stats Event."
      },
      "Stats": {
        "type": "object",
        "properties": {
          "BytesScanned": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BytesScanned"
              },
              {
                "description": "The total number of object bytes scanned."
              }
            ]
          },
          "BytesProcessed": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BytesProcessed"
              },
              {
                "description": "The total number of uncompressed object bytes processed."
              }
            ]
          },
          "BytesReturned": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BytesReturned"
              },
              {
                "description": "The total number of bytes of records payload data returned."
              }
            ]
          }
        },
        "description": "Container for the stats details."
      },
      "Value": {
        "type": "string"
      },
      "UploadPartCopyRequest": {
        "type": "object",
        "title": "UploadPartCopyRequest",
        "properties": {}
      },
      "UploadPartRequest": {
        "type": "object",
        "title": "UploadPartRequest",
        "properties": {
          "Body": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Body"
              },
              {
                "description": "Object data."
              }
            ]
          }
        }
      },
      "WriteGetObjectResponseRequest": {
        "type": "object",
        "title": "WriteGetObjectResponseRequest",
        "properties": {
          "Body": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Body"
              },
              {
                "description": "The object data."
              }
            ]
          },
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              },
              {
                "xml": {
                  "name": "x-amz-meta-"
                },
                "description": "A map of metadata to store with the object in S3."
              }
            ]
          }
        }
      },
      "StorageClass": {
        "type": "string",
        "enum": [
          "STANDARD",
          "REDUCED_REDUNDANCY",
          "STANDARD_IA",
          "ONEZONE_IA",
          "INTELLIGENT_TIERING",
          "GLACIER",
          "DEEP_ARCHIVE",
          "OUTPOSTS",
          "GLACIER_IR",
          "SNOW"
        ]
      },
      "GetBucketLocationOutput": {
        "type": "object",
        "example": {
          "LocationConstraint": "us-west-2"
        },
        "properties": {
          "LocationConstraint": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BucketLocationConstraint"
              },
              {
                "description": "Specifies the Region where the bucket resides. For a list of all the Amazon S3 supported location constraints by Region, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\">Regions and Endpoints</a>. Buckets in Region <code>us-east-1</code> have a LocationConstraint of <code>null</code>."
              }
            ]
          }
        }
      },
      "ObjectStorageClass": {
        "type": "string",
        "enum": [
          "STANDARD",
          "REDUCED_REDUNDANCY",
          "GLACIER",
          "STANDARD_IA",
          "ONEZONE_IA",
          "INTELLIGENT_TIERING",
          "DEEP_ARCHIVE",
          "OUTPOSTS",
          "GLACIER_IR",
          "SNOW"
        ]
      }
    }
  },
  "security": [
    {
      "hmac": []
    }
  ]
}
